#pragma once
#include "hw_classes.h"
#include "conv_3x3.h"


//store is: hw_input_copy.stencil(hw_input_copy_s0_x, hw_input_copy_s0_y) = hw_input.stencil(hw_input_copy_s0_x, hw_input_copy_s0_y)
hw_uint<16> hcompute_hw_input_copy_stencil(hw_uint<16>& hw_input_stencil) {
  uint16_t _hw_input_stencil_1 = (uint16_t) hw_input_stencil.extract<0, 15>();

  return _hw_input_stencil_1;
}

//store is: denoised$1.stencil(denoised_1_s0_x, denoised_1_s0_y) = max(min(hw_input_copy.stencil(denoised_1_s0_x, denoised_1_s0_y), max(hw_input_copy.stencil(denoised_1_s0_x, (denoised_1_s0_y + 2)), max(hw_input_copy.stencil(denoised_1_s0_x, (denoised_1_s0_y + -2)), max(hw_input_copy.stencil((denoised_1_s0_x + -2), denoised_1_s0_y), hw_input_copy.stencil((denoised_1_s0_x + 2), denoised_1_s0_y))))), min(hw_input_copy.stencil(denoised_1_s0_x, (denoised_1_s0_y + 2)), min(hw_input_copy.stencil(denoised_1_s0_x, (denoised_1_s0_y + -2)), min(hw_input_copy.stencil((denoised_1_s0_x + -2), denoised_1_s0_y), hw_input_copy.stencil((denoised_1_s0_x + 2), denoised_1_s0_y)))))
hw_uint<16> hcompute_denoised_1_stencil(hw_uint<80>& hw_input_copy_stencil) {
  uint16_t _hw_input_copy_stencil_1 = (uint16_t) hw_input_copy_stencil.extract<0, 15>();
  uint16_t _hw_input_copy_stencil_2 = (uint16_t) hw_input_copy_stencil.extract<16, 31>();
  uint16_t _hw_input_copy_stencil_3 = (uint16_t) hw_input_copy_stencil.extract<32, 47>();
  uint16_t _hw_input_copy_stencil_4 = (uint16_t) hw_input_copy_stencil.extract<48, 63>();
  uint16_t _hw_input_copy_stencil_5 = (uint16_t) hw_input_copy_stencil.extract<64, 79>();

  uint16_t _322 = max(_hw_input_copy_stencil_4, _hw_input_copy_stencil_5);
  uint16_t _323 = max(_hw_input_copy_stencil_3, _322);
  uint16_t _324 = max(_hw_input_copy_stencil_2, _323);
  uint16_t _325 = min(_hw_input_copy_stencil_1, _324);
  uint16_t _326 = min(_hw_input_copy_stencil_4, _hw_input_copy_stencil_5);
  uint16_t _327 = min(_hw_input_copy_stencil_3, _326);
  uint16_t _328 = min(_hw_input_copy_stencil_2, _327);
  uint16_t _329 = max(_325, _328);
  return _329;
}

//store is: demosaicked$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y, 0) = select(((demosaicked_1_s0_y % 2) == 0), select(((demosaicked_1_s0_x % 2) == 0), ((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) + (uint16)1)/(uint16)2)) - (((select((absd(denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y), denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) < absd(denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y), denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + 1)))), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) + (uint16)1)/(uint16)2), (((denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + 1))) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil((demosaicked_1_s0_x + -1), demosaicked_1_s0_y)) < absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + 1)))), (((denoised$1.stencil((demosaicked_1_s0_x + -1), demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + 1)) + denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2)), denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)), select(((demosaicked_1_s0_x % 2) == 0), select((absd(denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + -1)), denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) < absd(denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)), denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y))), (((((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2) + select((absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) < absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)))), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2))) - (((select((absd(denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + -1)), denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) < absd(denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + -1)), denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y))), (((denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)) + denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2), (((denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + -1)) + denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil((demosaicked_1_s0_x + -1), demosaicked_1_s0_y)) < absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + 1)))), (((denoised$1.stencil((demosaicked_1_s0_x + -1), demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + 1)) + denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2)), (((((denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2) + select((absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) < absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)))), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2))) - (((select((absd(denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y), denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) < absd(denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y), denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + 1)))), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y)) + (uint16)1)/(uint16)2), (((denoised$1.stencil((demosaicked_1_s0_x + 1), demosaicked_1_s0_y) + denoised$1.stencil((demosaicked_1_s0_x + 1), (demosaicked_1_s0_y + 1))) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)), denoised$1.stencil((demosaicked_1_s0_x + -1), (demosaicked_1_s0_y + -1))) < absd(denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)), denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y))), (((denoised$1.stencil((demosaicked_1_s0_x + -1), (demosaicked_1_s0_y + -1)) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2))), ((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2)) - (((select((absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil((demosaicked_1_s0_x + -1), demosaicked_1_s0_y)) < absd(denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y), denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + 1)))), (((denoised$1.stencil((demosaicked_1_s0_x + -1), demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + 1)) + denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y)) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)), denoised$1.stencil((demosaicked_1_s0_x + -1), (demosaicked_1_s0_y + -1))) < absd(denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1)), denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y))), (((denoised$1.stencil((demosaicked_1_s0_x + -1), (demosaicked_1_s0_y + -1)) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x, demosaicked_1_s0_y) + denoised$1.stencil(demosaicked_1_s0_x, (demosaicked_1_s0_y + -1))) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2))))
hw_uint<16> hcompute_demosaicked_1_stencil(hw_uint<128>& denoised_1_stencil, const int _demosaicked_1_s0_x, const int _demosaicked_1_s0_y) {
  uint16_t _denoised_1_stencil_1 = (uint16_t) denoised_1_stencil.extract<0, 15>();
  uint16_t _denoised_1_stencil_2 = (uint16_t) denoised_1_stencil.extract<16, 31>();
  uint16_t _denoised_1_stencil_3 = (uint16_t) denoised_1_stencil.extract<32, 47>();
  uint16_t _denoised_1_stencil_4 = (uint16_t) denoised_1_stencil.extract<48, 63>();
  uint16_t _denoised_1_stencil_5 = (uint16_t) denoised_1_stencil.extract<64, 79>();
  uint16_t _denoised_1_stencil_6 = (uint16_t) denoised_1_stencil.extract<80, 95>();
  uint16_t _denoised_1_stencil_7 = (uint16_t) denoised_1_stencil.extract<96, 111>();
  uint16_t _denoised_1_stencil_8 = (uint16_t) denoised_1_stencil.extract<112, 127>();

  uint16_t _355 = _denoised_1_stencil_1 + _denoised_1_stencil_2;
  uint16_t _356 = (uint16_t)(1);
  uint16_t _357 = _355 + _356;
  uint16_t _358 = _357 >> _356;
  uint16_t _359 = _denoised_1_stencil_1 + _358;
  uint16_t _360 = _denoised_1_stencil_2 + _denoised_1_stencil_3;
  uint16_t _361 = _360 + _356;
  uint16_t _362 = _361 >> _356;
  uint16_t _363 = _denoised_1_stencil_1 - _denoised_1_stencil_2;
  uint16_t _364 = _denoised_1_stencil_2 - _denoised_1_stencil_1;
  bool _365 = _denoised_1_stencil_2 < _denoised_1_stencil_1;
  uint16_t _366 = (uint16_t)(_365 ? _363 : _364);
  uint16_t _367 = _366;
  uint16_t _368 = _denoised_1_stencil_3 - _denoised_1_stencil_2;
  uint16_t _369 = _denoised_1_stencil_2 - _denoised_1_stencil_3;
  bool _370 = _denoised_1_stencil_2 < _denoised_1_stencil_3;
  uint16_t _371 = (uint16_t)(_370 ? _368 : _369);
  uint16_t _372 = _371;
  bool _373 = _367 < _372;
  uint16_t _374 = (uint16_t)(_373 ? _358 : _362);
  uint16_t _375 = _denoised_1_stencil_4 + _denoised_1_stencil_1;
  uint16_t _376 = _375 + _356;
  uint16_t _377 = _376 >> _356;
  uint16_t _378 = _denoised_1_stencil_5 + _denoised_1_stencil_1;
  uint16_t _379 = _378 + _356;
  uint16_t _380 = _379 >> _356;
  uint16_t _381 = _denoised_1_stencil_4 - _denoised_1_stencil_1;
  uint16_t _382 = _denoised_1_stencil_1 - _denoised_1_stencil_4;
  bool _383 = _denoised_1_stencil_1 < _denoised_1_stencil_4;
  uint16_t _384 = (uint16_t)(_383 ? _381 : _382);
  uint16_t _385 = _384;
  uint16_t _386 = _denoised_1_stencil_5 - _denoised_1_stencil_1;
  uint16_t _387 = _denoised_1_stencil_1 - _denoised_1_stencil_5;
  bool _388 = _denoised_1_stencil_1 < _denoised_1_stencil_5;
  uint16_t _389 = (uint16_t)(_388 ? _386 : _387);
  uint16_t _390 = _389;
  bool _391 = _385 < _390;
  uint16_t _392 = (uint16_t)(_391 ? _377 : _380);
  uint16_t _393 = _374 + _392;
  uint16_t _394 = _393 + _356;
  uint16_t _395 = _394 >> _356;
  uint16_t _396 = _359 - _395;
  int32_t _397 = _demosaicked_1_s0_x & 1;
  bool _398 = _397 == 0;
  uint16_t _399 = (uint16_t)(_398 ? _396 : _denoised_1_stencil_1);
  uint16_t _400 = _denoised_1_stencil_1 + _denoised_1_stencil_6;
  uint16_t _401 = _400 + _356;
  uint16_t _402 = _401 >> _356;
  uint16_t _403 = _denoised_1_stencil_1 + _denoised_1_stencil_7;
  uint16_t _404 = _403 + _356;
  uint16_t _405 = _404 >> _356;
  bool _406 = _denoised_1_stencil_1 < _denoised_1_stencil_2;
  uint16_t _407 = (uint16_t)(_406 ? _364 : _363);
  uint16_t _408 = _407;
  uint16_t _409 = _denoised_1_stencil_7 - _denoised_1_stencil_1;
  uint16_t _410 = _denoised_1_stencil_1 - _denoised_1_stencil_7;
  bool _411 = _denoised_1_stencil_1 < _denoised_1_stencil_7;
  uint16_t _412 = (uint16_t)(_411 ? _409 : _410);
  uint16_t _413 = _412;
  bool _414 = _408 < _413;
  uint16_t _415 = (uint16_t)(_414 ? _358 : _405);
  uint16_t _416 = _402 + _415;
  uint16_t _417 = _denoised_1_stencil_7 + _denoised_1_stencil_6;
  uint16_t _418 = _417 + _356;
  uint16_t _419 = _418 >> _356;
  uint16_t _420 = _denoised_1_stencil_6 + _denoised_1_stencil_2;
  uint16_t _421 = _420 + _356;
  uint16_t _422 = _421 >> _356;
  uint16_t _423 = _denoised_1_stencil_7 - _denoised_1_stencil_6;
  uint16_t _424 = _denoised_1_stencil_6 - _denoised_1_stencil_7;
  bool _425 = _denoised_1_stencil_6 < _denoised_1_stencil_7;
  uint16_t _426 = (uint16_t)(_425 ? _423 : _424);
  uint16_t _427 = _426;
  uint16_t _428 = _denoised_1_stencil_2 - _denoised_1_stencil_6;
  uint16_t _429 = _denoised_1_stencil_6 - _denoised_1_stencil_2;
  bool _430 = _denoised_1_stencil_6 < _denoised_1_stencil_2;
  uint16_t _431 = (uint16_t)(_430 ? _428 : _429);
  uint16_t _432 = _431;
  bool _433 = _427 < _432;
  uint16_t _434 = (uint16_t)(_433 ? _419 : _422);
  uint16_t _435 = _434 + _392;
  uint16_t _436 = _435 + _356;
  uint16_t _437 = _436 >> _356;
  uint16_t _438 = _416 - _437;
  uint16_t _439 = _denoised_1_stencil_2 + _denoised_1_stencil_7;
  uint16_t _440 = _439 + _356;
  uint16_t _441 = _440 >> _356;
  uint16_t _442 = _441 + _415;
  uint16_t _443 = _denoised_1_stencil_8 + _denoised_1_stencil_7;
  uint16_t _444 = _443 + _356;
  uint16_t _445 = _444 >> _356;
  uint16_t _446 = _denoised_1_stencil_8 - _denoised_1_stencil_7;
  uint16_t _447 = _denoised_1_stencil_7 - _denoised_1_stencil_8;
  bool _448 = _denoised_1_stencil_7 < _denoised_1_stencil_8;
  uint16_t _449 = (uint16_t)(_448 ? _446 : _447);
  uint16_t _450 = _449;
  bool _451 = _denoised_1_stencil_7 < _denoised_1_stencil_1;
  uint16_t _452 = (uint16_t)(_451 ? _410 : _409);
  uint16_t _453 = _452;
  bool _454 = _450 < _453;
  uint16_t _455 = (uint16_t)(_454 ? _445 : _405);
  uint16_t _456 = _374 + _455;
  uint16_t _457 = _456 + _356;
  uint16_t _458 = _457 >> _356;
  uint16_t _459 = _442 - _458;
  uint16_t _460 = _denoised_1_stencil_1 - _denoised_1_stencil_6;
  uint16_t _461 = _denoised_1_stencil_6 - _denoised_1_stencil_1;
  bool _462 = _denoised_1_stencil_6 < _denoised_1_stencil_1;
  uint16_t _463 = (uint16_t)(_462 ? _460 : _461);
  uint16_t _464 = _463;
  uint16_t _465 = _denoised_1_stencil_2 - _denoised_1_stencil_7;
  uint16_t _466 = _denoised_1_stencil_7 - _denoised_1_stencil_2;
  bool _467 = _denoised_1_stencil_7 < _denoised_1_stencil_2;
  uint16_t _468 = (uint16_t)(_467 ? _465 : _466);
  uint16_t _469 = _468;
  bool _470 = _464 < _469;
  uint16_t _471 = (uint16_t)(_470 ? _438 : _459);
  uint16_t _472 = _denoised_1_stencil_1 + _405;
  uint16_t _473 = _392 + _455;
  uint16_t _474 = _473 + _356;
  uint16_t _475 = _474 >> _356;
  uint16_t _476 = _472 - _475;
  uint16_t _477 = (uint16_t)(_398 ? _471 : _476);
  int32_t _478 = _demosaicked_1_s0_y & 1;
  bool _479 = _478 == 0;
  uint16_t _480 = (uint16_t)(_479 ? _399 : _477);
  return _480;
}

//store is: demosaicked$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1, 1) = select(((demosaicked_1_s0_y_1 % 2) == 0), select(((demosaicked_1_s0_x_1 % 2) == 0), denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1), select((absd(denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1), denoised$1.stencil((demosaicked_1_s0_x_1 + -1), demosaicked_1_s0_y_1)) < absd(denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1), denoised$1.stencil(demosaicked_1_s0_x_1, (demosaicked_1_s0_y_1 + 1)))), (((denoised$1.stencil((demosaicked_1_s0_x_1 + -1), demosaicked_1_s0_y_1) + denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_1, (demosaicked_1_s0_y_1 + 1)) + denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1)) + (uint16)1)/(uint16)2))), select(((demosaicked_1_s0_x_1 % 2) == 0), select((absd(denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1), denoised$1.stencil((demosaicked_1_s0_x_1 + 1), demosaicked_1_s0_y_1)) < absd(denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1), denoised$1.stencil(demosaicked_1_s0_x_1, (demosaicked_1_s0_y_1 + -1)))), (((denoised$1.stencil((demosaicked_1_s0_x_1 + 1), demosaicked_1_s0_y_1) + denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_1, (demosaicked_1_s0_y_1 + -1)) + denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1)) + (uint16)1)/(uint16)2)), denoised$1.stencil(demosaicked_1_s0_x_1, demosaicked_1_s0_y_1)))
hw_uint<16> hcompute_demosaicked_1_stencil_1(hw_uint<80>& denoised_1_stencil, const int _demosaicked_1_s0_x_1, const int _demosaicked_1_s0_y_1) {
  uint16_t _denoised_1_stencil_10 = (uint16_t) denoised_1_stencil.extract<0, 15>();
  uint16_t _denoised_1_stencil_11 = (uint16_t) denoised_1_stencil.extract<16, 31>();
  uint16_t _denoised_1_stencil_12 = (uint16_t) denoised_1_stencil.extract<32, 47>();
  uint16_t _denoised_1_stencil_13 = (uint16_t) denoised_1_stencil.extract<48, 63>();
  uint16_t _denoised_1_stencil_9 = (uint16_t) denoised_1_stencil.extract<64, 79>();

  uint16_t _702 = _denoised_1_stencil_10 + _denoised_1_stencil_9;
  uint16_t _703 = (uint16_t)(1);
  uint16_t _704 = _702 + _703;
  uint16_t _705 = _704 >> _703;
  uint16_t _706 = _denoised_1_stencil_11 + _denoised_1_stencil_9;
  uint16_t _707 = _706 + _703;
  uint16_t _708 = _707 >> _703;
  uint16_t _709 = _denoised_1_stencil_10 - _denoised_1_stencil_9;
  uint16_t _710 = _denoised_1_stencil_9 - _denoised_1_stencil_10;
  bool _711 = _denoised_1_stencil_9 < _denoised_1_stencil_10;
  uint16_t _712 = (uint16_t)(_711 ? _709 : _710);
  uint16_t _713 = _712;
  uint16_t _714 = _denoised_1_stencil_11 - _denoised_1_stencil_9;
  uint16_t _715 = _denoised_1_stencil_9 - _denoised_1_stencil_11;
  bool _716 = _denoised_1_stencil_9 < _denoised_1_stencil_11;
  uint16_t _717 = (uint16_t)(_716 ? _714 : _715);
  uint16_t _718 = _717;
  bool _719 = _713 < _718;
  uint16_t _720 = (uint16_t)(_719 ? _705 : _708);
  int32_t _721 = _demosaicked_1_s0_x_1 & 1;
  bool _722 = _721 == 0;
  uint16_t _723 = (uint16_t)(_722 ? _denoised_1_stencil_9 : _720);
  uint16_t _724 = _denoised_1_stencil_12 + _denoised_1_stencil_9;
  uint16_t _725 = _724 + _703;
  uint16_t _726 = _725 >> _703;
  uint16_t _727 = _denoised_1_stencil_13 + _denoised_1_stencil_9;
  uint16_t _728 = _727 + _703;
  uint16_t _729 = _728 >> _703;
  uint16_t _730 = _denoised_1_stencil_12 - _denoised_1_stencil_9;
  uint16_t _731 = _denoised_1_stencil_9 - _denoised_1_stencil_12;
  bool _732 = _denoised_1_stencil_9 < _denoised_1_stencil_12;
  uint16_t _733 = (uint16_t)(_732 ? _730 : _731);
  uint16_t _734 = _733;
  uint16_t _735 = _denoised_1_stencil_13 - _denoised_1_stencil_9;
  uint16_t _736 = _denoised_1_stencil_9 - _denoised_1_stencil_13;
  bool _737 = _denoised_1_stencil_9 < _denoised_1_stencil_13;
  uint16_t _738 = (uint16_t)(_737 ? _735 : _736);
  uint16_t _739 = _738;
  bool _740 = _734 < _739;
  uint16_t _741 = (uint16_t)(_740 ? _726 : _729);
  uint16_t _742 = (uint16_t)(_722 ? _741 : _denoised_1_stencil_9);
  int32_t _743 = _demosaicked_1_s0_y_1 & 1;
  bool _744 = _743 == 0;
  uint16_t _745 = (uint16_t)(_744 ? _723 : _742);
  return _745;
}

//store is: demosaicked$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2, 2) = select(((demosaicked_1_s0_y_2 % 2) == 0), select(((demosaicked_1_s0_x_2 % 2) == 0), ((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2)) - (((select((absd(denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil((demosaicked_1_s0_x_2 + 1), (demosaicked_1_s0_y_2 + 1))) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2))), (((denoised$1.stencil((demosaicked_1_s0_x_2 + 1), (demosaicked_1_s0_y_2 + 1)) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil((demosaicked_1_s0_x_2 + 1), demosaicked_1_s0_y_2)) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + -1)))), (((denoised$1.stencil((demosaicked_1_s0_x_2 + 1), demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + -1)) + denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2)), select((absd(denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2))), (((((denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + 1)) + denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2) + select((absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)))), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2))) - (((select((absd(denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) < absd(denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2))), (((denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + 1)) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2), (((denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + 1)) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil((demosaicked_1_s0_x_2 + 1), demosaicked_1_s0_y_2)) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + -1)))), (((denoised$1.stencil((demosaicked_1_s0_x_2 + 1), demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + -1)) + denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2)), (((((denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2) + select((absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)))), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2))) - (((select((absd(denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil((demosaicked_1_s0_x_2 + 1), (demosaicked_1_s0_y_2 + 1))) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1)), denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2))), (((denoised$1.stencil((demosaicked_1_s0_x_2 + 1), (demosaicked_1_s0_y_2 + 1)) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + 1))) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2), denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) < absd(denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2), denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + -1)))), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2), (((denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + -1)) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2)))), select(((demosaicked_1_s0_x_2 % 2) == 0), denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), ((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2)) - (((select((absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil((demosaicked_1_s0_x_2 + 1), demosaicked_1_s0_y_2)) < absd(denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2), denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + -1)))), (((denoised$1.stencil((demosaicked_1_s0_x_2 + 1), demosaicked_1_s0_y_2) + denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2), (((denoised$1.stencil(demosaicked_1_s0_x_2, (demosaicked_1_s0_y_2 + -1)) + denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2)) + select((absd(denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2), denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2)) < absd(denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2), denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + -1)))), (((denoised$1.stencil(demosaicked_1_s0_x_2, demosaicked_1_s0_y_2) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2), (((denoised$1.stencil((demosaicked_1_s0_x_2 + -1), (demosaicked_1_s0_y_2 + -1)) + denoised$1.stencil((demosaicked_1_s0_x_2 + -1), demosaicked_1_s0_y_2)) + (uint16)1)/(uint16)2))) + (uint16)1)/(uint16)2))))
hw_uint<16> hcompute_demosaicked_1_stencil_2(hw_uint<128>& denoised_1_stencil, const int _demosaicked_1_s0_x_2, const int _demosaicked_1_s0_y_2) {
  uint16_t _denoised_1_stencil_14 = (uint16_t) denoised_1_stencil.extract<0, 15>();
  uint16_t _denoised_1_stencil_15 = (uint16_t) denoised_1_stencil.extract<16, 31>();
  uint16_t _denoised_1_stencil_16 = (uint16_t) denoised_1_stencil.extract<32, 47>();
  uint16_t _denoised_1_stencil_17 = (uint16_t) denoised_1_stencil.extract<48, 63>();
  uint16_t _denoised_1_stencil_18 = (uint16_t) denoised_1_stencil.extract<64, 79>();
  uint16_t _denoised_1_stencil_19 = (uint16_t) denoised_1_stencil.extract<80, 95>();
  uint16_t _denoised_1_stencil_20 = (uint16_t) denoised_1_stencil.extract<96, 111>();
  uint16_t _denoised_1_stencil_21 = (uint16_t) denoised_1_stencil.extract<112, 127>();

  uint16_t _828 = _denoised_1_stencil_14 + _denoised_1_stencil_15;
  uint16_t _829 = (uint16_t)(1);
  uint16_t _830 = _828 + _829;
  uint16_t _831 = _830 >> _829;
  uint16_t _832 = _denoised_1_stencil_14 + _831;
  uint16_t _833 = _denoised_1_stencil_16 + _denoised_1_stencil_15;
  uint16_t _834 = _833 + _829;
  uint16_t _835 = _834 >> _829;
  uint16_t _836 = _denoised_1_stencil_16 - _denoised_1_stencil_15;
  uint16_t _837 = _denoised_1_stencil_15 - _denoised_1_stencil_16;
  bool _838 = _denoised_1_stencil_15 < _denoised_1_stencil_16;
  uint16_t _839 = (uint16_t)(_838 ? _836 : _837);
  uint16_t _840 = _839;
  uint16_t _841 = _denoised_1_stencil_14 - _denoised_1_stencil_15;
  uint16_t _842 = _denoised_1_stencil_15 - _denoised_1_stencil_14;
  bool _843 = _denoised_1_stencil_15 < _denoised_1_stencil_14;
  uint16_t _844 = (uint16_t)(_843 ? _841 : _842);
  uint16_t _845 = _844;
  bool _846 = _840 < _845;
  uint16_t _847 = (uint16_t)(_846 ? _835 : _831);
  uint16_t _848 = _denoised_1_stencil_17 + _denoised_1_stencil_14;
  uint16_t _849 = _848 + _829;
  uint16_t _850 = _849 >> _829;
  uint16_t _851 = _denoised_1_stencil_18 + _denoised_1_stencil_14;
  uint16_t _852 = _851 + _829;
  uint16_t _853 = _852 >> _829;
  uint16_t _854 = _denoised_1_stencil_17 - _denoised_1_stencil_14;
  uint16_t _855 = _denoised_1_stencil_14 - _denoised_1_stencil_17;
  bool _856 = _denoised_1_stencil_14 < _denoised_1_stencil_17;
  uint16_t _857 = (uint16_t)(_856 ? _854 : _855);
  uint16_t _858 = _857;
  uint16_t _859 = _denoised_1_stencil_18 - _denoised_1_stencil_14;
  uint16_t _860 = _denoised_1_stencil_14 - _denoised_1_stencil_18;
  bool _861 = _denoised_1_stencil_14 < _denoised_1_stencil_18;
  uint16_t _862 = (uint16_t)(_861 ? _859 : _860);
  uint16_t _863 = _862;
  bool _864 = _858 < _863;
  uint16_t _865 = (uint16_t)(_864 ? _850 : _853);
  uint16_t _866 = _847 + _865;
  uint16_t _867 = _866 + _829;
  uint16_t _868 = _867 >> _829;
  uint16_t _869 = _832 - _868;
  uint16_t _870 = _denoised_1_stencil_19 + _denoised_1_stencil_14;
  uint16_t _871 = _870 + _829;
  uint16_t _872 = _871 >> _829;
  uint16_t _873 = _denoised_1_stencil_14 + _denoised_1_stencil_20;
  uint16_t _874 = _873 + _829;
  uint16_t _875 = _874 >> _829;
  uint16_t _876 = _denoised_1_stencil_20 - _denoised_1_stencil_14;
  uint16_t _877 = _denoised_1_stencil_14 - _denoised_1_stencil_20;
  bool _878 = _denoised_1_stencil_14 < _denoised_1_stencil_20;
  uint16_t _879 = (uint16_t)(_878 ? _876 : _877);
  uint16_t _880 = _879;
  bool _881 = _denoised_1_stencil_14 < _denoised_1_stencil_15;
  uint16_t _882 = (uint16_t)(_881 ? _842 : _841);
  uint16_t _883 = _882;
  bool _884 = _880 < _883;
  uint16_t _885 = (uint16_t)(_884 ? _875 : _831);
  uint16_t _886 = _872 + _885;
  uint16_t _887 = _denoised_1_stencil_19 + _denoised_1_stencil_15;
  uint16_t _888 = _887 + _829;
  uint16_t _889 = _888 >> _829;
  uint16_t _890 = _denoised_1_stencil_19 + _denoised_1_stencil_20;
  uint16_t _891 = _890 + _829;
  uint16_t _892 = _891 >> _829;
  uint16_t _893 = _denoised_1_stencil_15 - _denoised_1_stencil_19;
  uint16_t _894 = _denoised_1_stencil_19 - _denoised_1_stencil_15;
  bool _895 = _denoised_1_stencil_19 < _denoised_1_stencil_15;
  uint16_t _896 = (uint16_t)(_895 ? _893 : _894);
  uint16_t _897 = _896;
  uint16_t _898 = _denoised_1_stencil_20 - _denoised_1_stencil_19;
  uint16_t _899 = _denoised_1_stencil_19 - _denoised_1_stencil_20;
  bool _900 = _denoised_1_stencil_19 < _denoised_1_stencil_20;
  uint16_t _901 = (uint16_t)(_900 ? _898 : _899);
  uint16_t _902 = _901;
  bool _903 = _897 < _902;
  uint16_t _904 = (uint16_t)(_903 ? _889 : _892);
  uint16_t _905 = _904 + _865;
  uint16_t _906 = _905 + _829;
  uint16_t _907 = _906 >> _829;
  uint16_t _908 = _886 - _907;
  uint16_t _909 = _denoised_1_stencil_15 + _denoised_1_stencil_20;
  uint16_t _910 = _909 + _829;
  uint16_t _911 = _910 >> _829;
  uint16_t _912 = _911 + _885;
  uint16_t _913 = _denoised_1_stencil_21 + _denoised_1_stencil_20;
  uint16_t _914 = _913 + _829;
  uint16_t _915 = _914 >> _829;
  bool _916 = _denoised_1_stencil_20 < _denoised_1_stencil_14;
  uint16_t _917 = (uint16_t)(_916 ? _877 : _876);
  uint16_t _918 = _917;
  uint16_t _919 = _denoised_1_stencil_21 - _denoised_1_stencil_20;
  uint16_t _920 = _denoised_1_stencil_20 - _denoised_1_stencil_21;
  bool _921 = _denoised_1_stencil_20 < _denoised_1_stencil_21;
  uint16_t _922 = (uint16_t)(_921 ? _919 : _920);
  uint16_t _923 = _922;
  bool _924 = _918 < _923;
  uint16_t _925 = (uint16_t)(_924 ? _875 : _915);
  uint16_t _926 = _847 + _925;
  uint16_t _927 = _926 + _829;
  uint16_t _928 = _927 >> _829;
  uint16_t _929 = _912 - _928;
  uint16_t _930 = _denoised_1_stencil_14 - _denoised_1_stencil_19;
  uint16_t _931 = _denoised_1_stencil_19 - _denoised_1_stencil_14;
  bool _932 = _denoised_1_stencil_19 < _denoised_1_stencil_14;
  uint16_t _933 = (uint16_t)(_932 ? _930 : _931);
  uint16_t _934 = _933;
  uint16_t _935 = _denoised_1_stencil_20 - _denoised_1_stencil_15;
  uint16_t _936 = _denoised_1_stencil_15 - _denoised_1_stencil_20;
  bool _937 = _denoised_1_stencil_15 < _denoised_1_stencil_20;
  uint16_t _938 = (uint16_t)(_937 ? _935 : _936);
  uint16_t _939 = _938;
  bool _940 = _934 < _939;
  uint16_t _941 = (uint16_t)(_940 ? _908 : _929);
  int32_t _942 = _demosaicked_1_s0_x_2 & 1;
  bool _943 = _942 == 0;
  uint16_t _944 = (uint16_t)(_943 ? _869 : _941);
  uint16_t _945 = _denoised_1_stencil_14 + _875;
  uint16_t _946 = _865 + _925;
  uint16_t _947 = _946 + _829;
  uint16_t _948 = _947 >> _829;
  uint16_t _949 = _945 - _948;
  uint16_t _950 = (uint16_t)(_943 ? _denoised_1_stencil_14 : _949);
  int32_t _951 = _demosaicked_1_s0_y_2 & 1;
  bool _952 = _951 == 0;
  uint16_t _953 = (uint16_t)(_952 ? _944 : _950);
  return _953;
}

//store is: corrected.stencil(corrected_s0_x, corrected_s0_y, corrected_s0_c) = select((corrected_s0_c == 0), uint16((((((int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 0))*(int16)200) + (int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 2))*(int16)17)) - (int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 1))*(int16)44)) + (int16)-3900)/(int16)256)), select((corrected_s0_c == 1), uint16((((((int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 1))*(int16)159) - (int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 0))*(int16)38)) - (int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 2))*(int16)21)) + (int16)-2541)/(int16)256)), uint16((((((int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 2))*(int16)228) - (int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 1))*(int16)73)) - (int16(demosaicked$1.stencil(corrected_s0_x, corrected_s0_y, 0))*(int16)8)) + (int16)-2008)/(int16)256))))
hw_uint<16> hcompute_corrected_stencil(hw_uint<48>& demosaicked_1_stencil, const int _corrected_s0_c) {
  uint16_t _demosaicked_1_stencil_1 = (uint16_t) demosaicked_1_stencil.extract<0, 15>();
  uint16_t _demosaicked_1_stencil_2 = (uint16_t) demosaicked_1_stencil.extract<16, 31>();
  uint16_t _demosaicked_1_stencil_3 = (uint16_t) demosaicked_1_stencil.extract<32, 47>();

  int16_t _1175 = (int16_t)(_demosaicked_1_stencil_1);
  int16_t _1176 = (int16_t)(200);
  int16_t _1177 = _1175 * _1176;
  int16_t _1178 = (int16_t)(_demosaicked_1_stencil_2);
  int16_t _1179 = (int16_t)(17);
  int16_t _1180 = _1178 * _1179;
  int16_t _1181 = _1177 + _1180;
  int16_t _1182 = (int16_t)(_demosaicked_1_stencil_3);
  int16_t _1183 = (int16_t)(44);
  int16_t _1184 = _1182 * _1183;
  int16_t _1185 = _1181 - _1184;
  int16_t _1186 = (int16_t)(-3900);
  int16_t _1187 = _1185 + _1186;
  int16_t _1188 = (int16_t)(8);
  int16_t _1189 = _1187 >> _1188;
  uint16_t _1190 = (uint16_t)(_1189);
  int16_t _1191 = (int16_t)(159);
  int16_t _1192 = _1182 * _1191;
  int16_t _1193 = (int16_t)(38);
  int16_t _1194 = _1175 * _1193;
  int16_t _1195 = _1192 - _1194;
  int16_t _1196 = (int16_t)(21);
  int16_t _1197 = _1178 * _1196;
  int16_t _1198 = _1195 - _1197;
  int16_t _1199 = (int16_t)(-2541);
  int16_t _1200 = _1198 + _1199;
  int16_t _1201 = _1200 >> _1188;
  uint16_t _1202 = (uint16_t)(_1201);
  int16_t _1203 = (int16_t)(228);
  int16_t _1204 = _1178 * _1203;
  int16_t _1205 = (int16_t)(73);
  int16_t _1206 = _1182 * _1205;
  int16_t _1207 = _1204 - _1206;
  int16_t _1208 = _1175 * _1188;
  int16_t _1209 = _1207 - _1208;
  int16_t _1210 = (int16_t)(-2008);
  int16_t _1211 = _1209 + _1210;
  int16_t _1212 = _1211 >> _1188;
  uint16_t _1213 = (uint16_t)(_1212);
  bool _1214 = _corrected_s0_c == 1;
  uint16_t _1215 = (uint16_t)(_1214 ? _1202 : _1213);
  bool _1216 = _corrected_s0_c == 0;
  uint16_t _1217 = (uint16_t)(_1216 ? _1190 : _1215);
  return _1217;
}

//store is: curved.stencil(curved_s0_x, curved_s0_y, curved_s0_c) = curve.stencil(int32(min(corrected.stencil(curved_s0_x, curved_s0_y, curved_s0_c), (uint16)255)))
hw_uint<16> hcompute_curved_stencil(hw_uint<16>& corrected_stencil) {
  uint16_t _corrected_stencil_1 = (uint16_t) corrected_stencil.extract<0, 15>();

  uint16_t curve_stencil[256];  // produce curve.stencil
  uint16_t _1564 = (uint16_t)(0);
  curve_stencil[0] = _1564;
  curve_stencil[1] = _1564;
  curve_stencil[2] = _1564;
  curve_stencil[3] = _1564;
  curve_stencil[4] = _1564;
  uint16_t _1565 = (uint16_t)(1);
  curve_stencil[5] = _1565;
  curve_stencil[6] = _1565;
  curve_stencil[7] = _1565;
  curve_stencil[8] = _1565;
  uint16_t _1566 = (uint16_t)(2);
  curve_stencil[9] = _1566;
  curve_stencil[10] = _1566;
  curve_stencil[11] = _1566;
  curve_stencil[12] = _1566;
  uint16_t _1567 = (uint16_t)(3);
  curve_stencil[13] = _1567;
  curve_stencil[14] = _1567;
  curve_stencil[15] = _1567;
  curve_stencil[16] = _1567;
  uint16_t _1568 = (uint16_t)(4);
  curve_stencil[17] = _1568;
  curve_stencil[18] = _1568;
  curve_stencil[19] = _1568;
  curve_stencil[20] = _1568;
  uint16_t _1569 = (uint16_t)(5);
  curve_stencil[21] = _1569;
  curve_stencil[22] = _1569;
  curve_stencil[23] = _1569;
  curve_stencil[24] = _1569;
  uint16_t _1570 = (uint16_t)(6);
  curve_stencil[25] = _1570;
  curve_stencil[26] = _1570;
  curve_stencil[27] = _1570;
  curve_stencil[28] = _1570;
  uint16_t _1571 = (uint16_t)(7);
  curve_stencil[29] = _1571;
  curve_stencil[30] = _1571;
  curve_stencil[31] = _1571;
  curve_stencil[32] = _1571;
  uint16_t _1572 = (uint16_t)(8);
  curve_stencil[33] = _1572;
  curve_stencil[34] = _1572;
  curve_stencil[35] = _1572;
  curve_stencil[36] = _1572;
  uint16_t _1573 = (uint16_t)(9);
  curve_stencil[37] = _1573;
  curve_stencil[38] = _1573;
  curve_stencil[39] = _1573;
  curve_stencil[40] = _1573;
  uint16_t _1574 = (uint16_t)(10);
  curve_stencil[41] = _1574;
  curve_stencil[42] = _1574;
  curve_stencil[43] = _1574;
  curve_stencil[44] = _1574;
  uint16_t _1575 = (uint16_t)(11);
  curve_stencil[45] = _1575;
  curve_stencil[46] = _1575;
  curve_stencil[47] = _1575;
  curve_stencil[48] = _1575;
  uint16_t _1576 = (uint16_t)(12);
  curve_stencil[49] = _1576;
  curve_stencil[50] = _1576;
  curve_stencil[51] = _1576;
  curve_stencil[52] = _1576;
  uint16_t _1577 = (uint16_t)(13);
  curve_stencil[53] = _1577;
  curve_stencil[54] = _1577;
  curve_stencil[55] = _1577;
  curve_stencil[56] = _1577;
  uint16_t _1578 = (uint16_t)(14);
  curve_stencil[57] = _1578;
  curve_stencil[58] = _1578;
  curve_stencil[59] = _1578;
  curve_stencil[60] = _1578;
  uint16_t _1579 = (uint16_t)(15);
  curve_stencil[61] = _1579;
  curve_stencil[62] = _1579;
  curve_stencil[63] = _1579;
  curve_stencil[64] = _1579;
  uint16_t _1580 = (uint16_t)(16);
  curve_stencil[65] = _1580;
  curve_stencil[66] = _1580;
  curve_stencil[67] = _1580;
  curve_stencil[68] = _1580;
  uint16_t _1581 = (uint16_t)(17);
  curve_stencil[69] = _1581;
  curve_stencil[70] = _1581;
  curve_stencil[71] = _1581;
  curve_stencil[72] = _1581;
  uint16_t _1582 = (uint16_t)(18);
  curve_stencil[73] = _1582;
  curve_stencil[74] = _1582;
  curve_stencil[75] = _1582;
  curve_stencil[76] = _1582;
  uint16_t _1583 = (uint16_t)(19);
  curve_stencil[77] = _1583;
  curve_stencil[78] = _1583;
  curve_stencil[79] = _1583;
  curve_stencil[80] = _1583;
  uint16_t _1584 = (uint16_t)(20);
  curve_stencil[81] = _1584;
  curve_stencil[82] = _1584;
  curve_stencil[83] = _1584;
  curve_stencil[84] = _1584;
  uint16_t _1585 = (uint16_t)(21);
  curve_stencil[85] = _1585;
  curve_stencil[86] = _1585;
  curve_stencil[87] = _1585;
  curve_stencil[88] = _1585;
  uint16_t _1586 = (uint16_t)(22);
  curve_stencil[89] = _1586;
  curve_stencil[90] = _1586;
  curve_stencil[91] = _1586;
  curve_stencil[92] = _1586;
  uint16_t _1587 = (uint16_t)(23);
  curve_stencil[93] = _1587;
  curve_stencil[94] = _1587;
  curve_stencil[95] = _1587;
  curve_stencil[96] = _1587;
  uint16_t _1588 = (uint16_t)(24);
  curve_stencil[97] = _1588;
  curve_stencil[98] = _1588;
  curve_stencil[99] = _1588;
  curve_stencil[100] = _1588;
  uint16_t _1589 = (uint16_t)(25);
  curve_stencil[101] = _1589;
  curve_stencil[102] = _1589;
  curve_stencil[103] = _1589;
  curve_stencil[104] = _1589;
  uint16_t _1590 = (uint16_t)(26);
  curve_stencil[105] = _1590;
  curve_stencil[106] = _1590;
  curve_stencil[107] = _1590;
  curve_stencil[108] = _1590;
  uint16_t _1591 = (uint16_t)(27);
  curve_stencil[109] = _1591;
  curve_stencil[110] = _1591;
  curve_stencil[111] = _1591;
  curve_stencil[112] = _1591;
  uint16_t _1592 = (uint16_t)(28);
  curve_stencil[113] = _1592;
  curve_stencil[114] = _1592;
  curve_stencil[115] = _1592;
  curve_stencil[116] = _1592;
  uint16_t _1593 = (uint16_t)(29);
  curve_stencil[117] = _1593;
  curve_stencil[118] = _1593;
  curve_stencil[119] = _1593;
  curve_stencil[120] = _1593;
  uint16_t _1594 = (uint16_t)(30);
  curve_stencil[121] = _1594;
  curve_stencil[122] = _1594;
  curve_stencil[123] = _1594;
  curve_stencil[124] = _1594;
  uint16_t _1595 = (uint16_t)(31);
  curve_stencil[125] = _1595;
  curve_stencil[126] = _1595;
  curve_stencil[127] = _1595;
  curve_stencil[128] = _1595;
  uint16_t _1596 = (uint16_t)(32);
  curve_stencil[129] = _1596;
  curve_stencil[130] = _1596;
  curve_stencil[131] = _1596;
  curve_stencil[132] = _1596;
  uint16_t _1597 = (uint16_t)(33);
  curve_stencil[133] = _1597;
  curve_stencil[134] = _1597;
  curve_stencil[135] = _1597;
  curve_stencil[136] = _1597;
  uint16_t _1598 = (uint16_t)(34);
  curve_stencil[137] = _1598;
  curve_stencil[138] = _1598;
  curve_stencil[139] = _1598;
  curve_stencil[140] = _1598;
  uint16_t _1599 = (uint16_t)(35);
  curve_stencil[141] = _1599;
  curve_stencil[142] = _1599;
  curve_stencil[143] = _1599;
  curve_stencil[144] = _1599;
  uint16_t _1600 = (uint16_t)(36);
  curve_stencil[145] = _1600;
  curve_stencil[146] = _1600;
  curve_stencil[147] = _1600;
  curve_stencil[148] = _1600;
  uint16_t _1601 = (uint16_t)(37);
  curve_stencil[149] = _1601;
  curve_stencil[150] = _1601;
  curve_stencil[151] = _1601;
  curve_stencil[152] = _1601;
  uint16_t _1602 = (uint16_t)(38);
  curve_stencil[153] = _1602;
  curve_stencil[154] = _1602;
  curve_stencil[155] = _1602;
  curve_stencil[156] = _1602;
  uint16_t _1603 = (uint16_t)(39);
  curve_stencil[157] = _1603;
  curve_stencil[158] = _1603;
  curve_stencil[159] = _1603;
  curve_stencil[160] = _1603;
  uint16_t _1604 = (uint16_t)(40);
  curve_stencil[161] = _1604;
  curve_stencil[162] = _1604;
  curve_stencil[163] = _1604;
  curve_stencil[164] = _1604;
  uint16_t _1605 = (uint16_t)(41);
  curve_stencil[165] = _1605;
  curve_stencil[166] = _1605;
  curve_stencil[167] = _1605;
  curve_stencil[168] = _1605;
  uint16_t _1606 = (uint16_t)(42);
  curve_stencil[169] = _1606;
  curve_stencil[170] = _1606;
  curve_stencil[171] = _1606;
  curve_stencil[172] = _1606;
  uint16_t _1607 = (uint16_t)(43);
  curve_stencil[173] = _1607;
  curve_stencil[174] = _1607;
  curve_stencil[175] = _1607;
  curve_stencil[176] = _1607;
  uint16_t _1608 = (uint16_t)(44);
  curve_stencil[177] = _1608;
  curve_stencil[178] = _1608;
  curve_stencil[179] = _1608;
  curve_stencil[180] = _1608;
  uint16_t _1609 = (uint16_t)(45);
  curve_stencil[181] = _1609;
  curve_stencil[182] = _1609;
  curve_stencil[183] = _1609;
  curve_stencil[184] = _1609;
  uint16_t _1610 = (uint16_t)(46);
  curve_stencil[185] = _1610;
  curve_stencil[186] = _1610;
  curve_stencil[187] = _1610;
  curve_stencil[188] = _1610;
  uint16_t _1611 = (uint16_t)(47);
  curve_stencil[189] = _1611;
  curve_stencil[190] = _1611;
  curve_stencil[191] = _1611;
  curve_stencil[192] = _1611;
  uint16_t _1612 = (uint16_t)(48);
  curve_stencil[193] = _1612;
  curve_stencil[194] = _1612;
  curve_stencil[195] = _1612;
  curve_stencil[196] = _1612;
  uint16_t _1613 = (uint16_t)(49);
  curve_stencil[197] = _1613;
  curve_stencil[198] = _1613;
  curve_stencil[199] = _1613;
  curve_stencil[200] = _1613;
  uint16_t _1614 = (uint16_t)(50);
  curve_stencil[201] = _1614;
  curve_stencil[202] = _1614;
  curve_stencil[203] = _1614;
  curve_stencil[204] = _1614;
  uint16_t _1615 = (uint16_t)(51);
  curve_stencil[205] = _1615;
  curve_stencil[206] = _1615;
  curve_stencil[207] = _1615;
  curve_stencil[208] = _1615;
  uint16_t _1616 = (uint16_t)(52);
  curve_stencil[209] = _1616;
  curve_stencil[210] = _1616;
  curve_stencil[211] = _1616;
  curve_stencil[212] = _1616;
  uint16_t _1617 = (uint16_t)(53);
  curve_stencil[213] = _1617;
  curve_stencil[214] = _1617;
  curve_stencil[215] = _1617;
  curve_stencil[216] = _1617;
  uint16_t _1618 = (uint16_t)(54);
  curve_stencil[217] = _1618;
  curve_stencil[218] = _1618;
  curve_stencil[219] = _1618;
  curve_stencil[220] = _1618;
  uint16_t _1619 = (uint16_t)(55);
  curve_stencil[221] = _1619;
  curve_stencil[222] = _1619;
  curve_stencil[223] = _1619;
  curve_stencil[224] = _1619;
  uint16_t _1620 = (uint16_t)(56);
  curve_stencil[225] = _1620;
  curve_stencil[226] = _1620;
  curve_stencil[227] = _1620;
  curve_stencil[228] = _1620;
  uint16_t _1621 = (uint16_t)(57);
  curve_stencil[229] = _1621;
  curve_stencil[230] = _1621;
  curve_stencil[231] = _1621;
  curve_stencil[232] = _1621;
  uint16_t _1622 = (uint16_t)(58);
  curve_stencil[233] = _1622;
  curve_stencil[234] = _1622;
  curve_stencil[235] = _1622;
  curve_stencil[236] = _1622;
  uint16_t _1623 = (uint16_t)(59);
  curve_stencil[237] = _1623;
  curve_stencil[238] = _1623;
  curve_stencil[239] = _1623;
  curve_stencil[240] = _1623;
  uint16_t _1624 = (uint16_t)(60);
  curve_stencil[241] = _1624;
  curve_stencil[242] = _1624;
  curve_stencil[243] = _1624;
  curve_stencil[244] = _1624;
  uint16_t _1625 = (uint16_t)(61);
  curve_stencil[245] = _1625;
  curve_stencil[246] = _1625;
  curve_stencil[247] = _1625;
  curve_stencil[248] = _1625;
  uint16_t _1626 = (uint16_t)(62);
  curve_stencil[249] = _1626;
  curve_stencil[250] = _1626;
  curve_stencil[251] = _1626;
  curve_stencil[252] = _1626;
  uint16_t _1627 = (uint16_t)(63);
  curve_stencil[253] = _1627;
  curve_stencil[254] = _1627;
  curve_stencil[255] = _1627;

  uint16_t _1628 = (uint16_t)(255);
  uint16_t _1629 = min(_corrected_stencil_1, _1628);
  int32_t _1630 = (int32_t)(_1629);
    uint16_t _1631 = curve_stencil[_1630];
    return _1631;
}

//store is: hw_output.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi, hw_output_s0_c) = uint8(curved.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi, hw_output_s0_c))
hw_uint<8> hcompute_hw_output_stencil(hw_uint<16>& curved_stencil) {
  uint16_t _curved_stencil_1 = (uint16_t) curved_stencil.extract<0, 15>();

  uint8_t _1641 = (uint8_t)(_curved_stencil_1);
  return _1641;
}

