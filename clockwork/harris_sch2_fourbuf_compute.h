#pragma once
#include "hw_classes.h"
#include "clockwork_standard_compute_units.h"


//store is: padded16_global_wrapper.stencil(padded16_global_wrapper_s0_x, padded16_global_wrapper_s0_y) = padded16.stencil(padded16_global_wrapper_s0_x, padded16_global_wrapper_s0_y)
hw_uint<16> hcompute_padded16_global_wrapper_stencil(hw_uint<16>& padded16_stencil) {
  int16_t _padded16_stencil_1 = (int16_t) padded16_stencil.extract<0, 15>();

  return _padded16_stencil_1;
}

//store is: lgxx.stencil(lgxx_s0_x, lgxx_s0_y) = (((max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + -2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), lgxx_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + -2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), lgxx_s0_y)), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -2)) + (padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), lgxx_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -2)) + (padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), lgxx_s0_y)), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + -2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -2))) - (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + -2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -2))) - (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1)) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1)) + (padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -2), lgxx_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + 1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1)) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1)) + (padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -2), lgxx_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + 1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + -1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), lgxx_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -1), lgxx_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + 1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + -1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), lgxx_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxx_s0_x + -1), lgxx_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + 1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + -1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), lgxx_s0_y)*(int16)2))) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1))) - (padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)*(int16)2)) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + -1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), lgxx_s0_y)*(int16)2))) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + -1))) - (padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)*(int16)2)) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 2)) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), lgxx_s0_y)) - (padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + 2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 2)) + (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), lgxx_s0_y)) - (padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -2), (lgxx_s0_y + 2))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 2), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)) - (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 2), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 2), (lgxx_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil(lgxx_s0_x, lgxx_s0_y)) - (padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil(lgxx_s0_x, (lgxx_s0_y + 2))), (int16)180), (int16)-180))/(int16)64) + ((max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 1), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), lgxx_s0_y)) - (padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + 2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxx_s0_x + 1), lgxx_s0_y) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxx_s0_x + 1), (lgxx_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), lgxx_s0_y)) - (padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil((lgxx_s0_x + -1), (lgxx_s0_y + 2))), (int16)180), (int16)-180))/(int16)64)))))))))
hw_uint<16> hcompute_lgxx_stencil(hw_uint<400>& padded16_global_wrapper_stencil) {
  int16_t _padded16_global_wrapper_stencil_1 = (int16_t) padded16_global_wrapper_stencil.extract<0, 15>();
  int16_t _padded16_global_wrapper_stencil_10 = (int16_t) padded16_global_wrapper_stencil.extract<16, 31>();
  int16_t _padded16_global_wrapper_stencil_11 = (int16_t) padded16_global_wrapper_stencil.extract<32, 47>();
  int16_t _padded16_global_wrapper_stencil_12 = (int16_t) padded16_global_wrapper_stencil.extract<48, 63>();
  int16_t _padded16_global_wrapper_stencil_13 = (int16_t) padded16_global_wrapper_stencil.extract<64, 79>();
  int16_t _padded16_global_wrapper_stencil_14 = (int16_t) padded16_global_wrapper_stencil.extract<80, 95>();
  int16_t _padded16_global_wrapper_stencil_15 = (int16_t) padded16_global_wrapper_stencil.extract<96, 111>();
  int16_t _padded16_global_wrapper_stencil_16 = (int16_t) padded16_global_wrapper_stencil.extract<112, 127>();
  int16_t _padded16_global_wrapper_stencil_17 = (int16_t) padded16_global_wrapper_stencil.extract<128, 143>();
  int16_t _padded16_global_wrapper_stencil_18 = (int16_t) padded16_global_wrapper_stencil.extract<144, 159>();
  int16_t _padded16_global_wrapper_stencil_19 = (int16_t) padded16_global_wrapper_stencil.extract<160, 175>();
  int16_t _padded16_global_wrapper_stencil_2 = (int16_t) padded16_global_wrapper_stencil.extract<176, 191>();
  int16_t _padded16_global_wrapper_stencil_20 = (int16_t) padded16_global_wrapper_stencil.extract<192, 207>();
  int16_t _padded16_global_wrapper_stencil_21 = (int16_t) padded16_global_wrapper_stencil.extract<208, 223>();
  int16_t _padded16_global_wrapper_stencil_22 = (int16_t) padded16_global_wrapper_stencil.extract<224, 239>();
  int16_t _padded16_global_wrapper_stencil_23 = (int16_t) padded16_global_wrapper_stencil.extract<240, 255>();
  int16_t _padded16_global_wrapper_stencil_24 = (int16_t) padded16_global_wrapper_stencil.extract<256, 271>();
  int16_t _padded16_global_wrapper_stencil_25 = (int16_t) padded16_global_wrapper_stencil.extract<272, 287>();
  int16_t _padded16_global_wrapper_stencil_3 = (int16_t) padded16_global_wrapper_stencil.extract<288, 303>();
  int16_t _padded16_global_wrapper_stencil_4 = (int16_t) padded16_global_wrapper_stencil.extract<304, 319>();
  int16_t _padded16_global_wrapper_stencil_5 = (int16_t) padded16_global_wrapper_stencil.extract<320, 335>();
  int16_t _padded16_global_wrapper_stencil_6 = (int16_t) padded16_global_wrapper_stencil.extract<336, 351>();
  int16_t _padded16_global_wrapper_stencil_7 = (int16_t) padded16_global_wrapper_stencil.extract<352, 367>();
  int16_t _padded16_global_wrapper_stencil_8 = (int16_t) padded16_global_wrapper_stencil.extract<368, 383>();
  int16_t _padded16_global_wrapper_stencil_9 = (int16_t) padded16_global_wrapper_stencil.extract<384, 399>();

  int16_t _261 = (int16_t)(2);
  int16_t _262 = _padded16_global_wrapper_stencil_3 * _261;
  int16_t _263 = _padded16_global_wrapper_stencil_2 + _262;
  int16_t _264 = _padded16_global_wrapper_stencil_1 + _263;
  int16_t _265 = _264 - _padded16_global_wrapper_stencil_4;
  int16_t _266 = _padded16_global_wrapper_stencil_5 * _261;
  int16_t _267 = _265 - _266;
  int16_t _268 = _267 - _padded16_global_wrapper_stencil_6;
  int16_t _269 = (int16_t)(180);
  int16_t _270 = min(_268, _269);
  int16_t _271 = (int16_t)(-180);
  int16_t _272 = max(_270, _271);
  int16_t _273 = _272 * _272;
  int16_t _274 = (int16_t)(6);
  int16_t _275 = _273 >> _274;
  int16_t _276 = _padded16_global_wrapper_stencil_9 * _261;
  int16_t _277 = _padded16_global_wrapper_stencil_8 + _276;
  int16_t _278 = _padded16_global_wrapper_stencil_7 + _277;
  int16_t _279 = _278 - _padded16_global_wrapper_stencil_10;
  int16_t _280 = _padded16_global_wrapper_stencil_11 * _261;
  int16_t _281 = _279 - _280;
  int16_t _282 = _281 - _padded16_global_wrapper_stencil_12;
  int16_t _283 = min(_282, _269);
  int16_t _284 = max(_283, _271);
  int16_t _285 = _284 * _284;
  int16_t _286 = _285 >> _274;
  int16_t _287 = _padded16_global_wrapper_stencil_15 * _261;
  int16_t _288 = _padded16_global_wrapper_stencil_14 + _287;
  int16_t _289 = _padded16_global_wrapper_stencil_13 + _288;
  int16_t _290 = _289 - _padded16_global_wrapper_stencil_7;
  int16_t _291 = _290 - _276;
  int16_t _292 = _291 - _padded16_global_wrapper_stencil_8;
  int16_t _293 = min(_292, _269);
  int16_t _294 = max(_293, _271);
  int16_t _295 = _294 * _294;
  int16_t _296 = _295 >> _274;
  int16_t _297 = _padded16_global_wrapper_stencil_8 * _261;
  int16_t _298 = _padded16_global_wrapper_stencil_16 + _297;
  int16_t _299 = _padded16_global_wrapper_stencil_9 + _298;
  int16_t _300 = _299 - _padded16_global_wrapper_stencil_11;
  int16_t _301 = _padded16_global_wrapper_stencil_12 * _261;
  int16_t _302 = _300 - _301;
  int16_t _303 = _302 - _padded16_global_wrapper_stencil_17;
  int16_t _304 = min(_303, _269);
  int16_t _305 = max(_304, _271);
  int16_t _306 = _305 * _305;
  int16_t _307 = _306 >> _274;
  int16_t _308 = _padded16_global_wrapper_stencil_2 * _261;
  int16_t _309 = _padded16_global_wrapper_stencil_18 + _308;
  int16_t _310 = _padded16_global_wrapper_stencil_3 + _309;
  int16_t _311 = _310 - _padded16_global_wrapper_stencil_5;
  int16_t _312 = _padded16_global_wrapper_stencil_6 * _261;
  int16_t _313 = _311 - _312;
  int16_t _314 = _313 - _padded16_global_wrapper_stencil_19;
  int16_t _315 = min(_314, _269);
  int16_t _316 = max(_315, _271);
  int16_t _317 = _316 * _316;
  int16_t _318 = _317 >> _274;
  int16_t _319 = _padded16_global_wrapper_stencil_14 * _261;
  int16_t _320 = _padded16_global_wrapper_stencil_20 + _319;
  int16_t _321 = _padded16_global_wrapper_stencil_15 + _320;
  int16_t _322 = _321 - _padded16_global_wrapper_stencil_9;
  int16_t _323 = _322 - _297;
  int16_t _324 = _323 - _padded16_global_wrapper_stencil_16;
  int16_t _325 = min(_324, _269);
  int16_t _326 = max(_325, _271);
  int16_t _327 = _326 * _326;
  int16_t _328 = _327 >> _274;
  int16_t _329 = _padded16_global_wrapper_stencil_16 * _261;
  int16_t _330 = _padded16_global_wrapper_stencil_21 + _329;
  int16_t _331 = _padded16_global_wrapper_stencil_8 + _330;
  int16_t _332 = _331 - _padded16_global_wrapper_stencil_12;
  int16_t _333 = _padded16_global_wrapper_stencil_17 * _261;
  int16_t _334 = _332 - _333;
  int16_t _335 = _334 - _padded16_global_wrapper_stencil_22;
  int16_t _336 = min(_335, _269);
  int16_t _337 = max(_336, _271);
  int16_t _338 = _337 * _337;
  int16_t _339 = _338 >> _274;
  int16_t _340 = _padded16_global_wrapper_stencil_20 * _261;
  int16_t _341 = _padded16_global_wrapper_stencil_23 + _340;
  int16_t _342 = _padded16_global_wrapper_stencil_14 + _341;
  int16_t _343 = _342 - _padded16_global_wrapper_stencil_8;
  int16_t _344 = _343 - _329;
  int16_t _345 = _344 - _padded16_global_wrapper_stencil_21;
  int16_t _346 = min(_345, _269);
  int16_t _347 = max(_346, _271);
  int16_t _348 = _347 * _347;
  int16_t _349 = _348 >> _274;
  int16_t _350 = _padded16_global_wrapper_stencil_18 * _261;
  int16_t _351 = _padded16_global_wrapper_stencil_24 + _350;
  int16_t _352 = _padded16_global_wrapper_stencil_2 + _351;
  int16_t _353 = _352 - _padded16_global_wrapper_stencil_6;
  int16_t _354 = _padded16_global_wrapper_stencil_19 * _261;
  int16_t _355 = _353 - _354;
  int16_t _356 = _355 - _padded16_global_wrapper_stencil_25;
  int16_t _357 = min(_356, _269);
  int16_t _358 = max(_357, _271);
  int16_t _359 = _358 * _358;
  int16_t _360 = _359 >> _274;
  int16_t _361 = _349 + _360;
  int16_t _362 = _339 + _361;
  int16_t _363 = _328 + _362;
  int16_t _364 = _318 + _363;
  int16_t _365 = _307 + _364;
  int16_t _366 = _296 + _365;
  int16_t _367 = _286 + _366;
  int16_t _368 = _275 + _367;
  return _368;
}

//store is: lgxy.stencil(lgxy_s0_x, lgxy_s0_y) = (((max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + -2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), lgxy_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + -1), lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), lgxy_s0_y) + (padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + -2))) - (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + -2))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -2)) + (padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), lgxy_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + -2), lgxy_s0_y) + (padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + -1), lgxy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -2))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + -2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + -1))*(int16)2))) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -2))) - (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), lgxy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + -2))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -1)) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxy_s0_x + -2), lgxy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + 1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + -1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), lgxy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxy_s0_x + -1), lgxy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + 1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + -1))) - (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + -1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + -1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), lgxy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -1))) - (padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + -1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), lgxy_s0_y)) - (padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + 2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + -2), (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -2), lgxy_s0_y)) - (padded16_global_wrapper.stencil((lgxy_s0_x + -1), lgxy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + 2), lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)) - (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 2), (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)) - (padded16_global_wrapper.stencil((lgxy_s0_x + 1), lgxy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + 2), lgxy_s0_y)), (int16)180), (int16)-180))/(int16)64) + ((max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + 1), lgxy_s0_y) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), lgxy_s0_y)) - (padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + 1))*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + 2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgxy_s0_x + -1), (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgxy_s0_x + 1), (lgxy_s0_y + 2)) + (padded16_global_wrapper.stencil(lgxy_s0_x, (lgxy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil((lgxy_s0_x + -1), lgxy_s0_y)) - (padded16_global_wrapper.stencil(lgxy_s0_x, lgxy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgxy_s0_x + 1), lgxy_s0_y)), (int16)180), (int16)-180))/(int16)64)))))))))
hw_uint<16> hcompute_lgxy_stencil(hw_uint<400>& padded16_global_wrapper_stencil) {
  int16_t _padded16_global_wrapper_stencil_26 = (int16_t) padded16_global_wrapper_stencil.extract<0, 15>();
  int16_t _padded16_global_wrapper_stencil_27 = (int16_t) padded16_global_wrapper_stencil.extract<16, 31>();
  int16_t _padded16_global_wrapper_stencil_28 = (int16_t) padded16_global_wrapper_stencil.extract<32, 47>();
  int16_t _padded16_global_wrapper_stencil_29 = (int16_t) padded16_global_wrapper_stencil.extract<48, 63>();
  int16_t _padded16_global_wrapper_stencil_30 = (int16_t) padded16_global_wrapper_stencil.extract<64, 79>();
  int16_t _padded16_global_wrapper_stencil_31 = (int16_t) padded16_global_wrapper_stencil.extract<80, 95>();
  int16_t _padded16_global_wrapper_stencil_32 = (int16_t) padded16_global_wrapper_stencil.extract<96, 111>();
  int16_t _padded16_global_wrapper_stencil_33 = (int16_t) padded16_global_wrapper_stencil.extract<112, 127>();
  int16_t _padded16_global_wrapper_stencil_34 = (int16_t) padded16_global_wrapper_stencil.extract<128, 143>();
  int16_t _padded16_global_wrapper_stencil_35 = (int16_t) padded16_global_wrapper_stencil.extract<144, 159>();
  int16_t _padded16_global_wrapper_stencil_36 = (int16_t) padded16_global_wrapper_stencil.extract<160, 175>();
  int16_t _padded16_global_wrapper_stencil_37 = (int16_t) padded16_global_wrapper_stencil.extract<176, 191>();
  int16_t _padded16_global_wrapper_stencil_38 = (int16_t) padded16_global_wrapper_stencil.extract<192, 207>();
  int16_t _padded16_global_wrapper_stencil_39 = (int16_t) padded16_global_wrapper_stencil.extract<208, 223>();
  int16_t _padded16_global_wrapper_stencil_40 = (int16_t) padded16_global_wrapper_stencil.extract<224, 239>();
  int16_t _padded16_global_wrapper_stencil_41 = (int16_t) padded16_global_wrapper_stencil.extract<240, 255>();
  int16_t _padded16_global_wrapper_stencil_42 = (int16_t) padded16_global_wrapper_stencil.extract<256, 271>();
  int16_t _padded16_global_wrapper_stencil_43 = (int16_t) padded16_global_wrapper_stencil.extract<272, 287>();
  int16_t _padded16_global_wrapper_stencil_44 = (int16_t) padded16_global_wrapper_stencil.extract<288, 303>();
  int16_t _padded16_global_wrapper_stencil_45 = (int16_t) padded16_global_wrapper_stencil.extract<304, 319>();
  int16_t _padded16_global_wrapper_stencil_46 = (int16_t) padded16_global_wrapper_stencil.extract<320, 335>();
  int16_t _padded16_global_wrapper_stencil_47 = (int16_t) padded16_global_wrapper_stencil.extract<336, 351>();
  int16_t _padded16_global_wrapper_stencil_48 = (int16_t) padded16_global_wrapper_stencil.extract<352, 367>();
  int16_t _padded16_global_wrapper_stencil_49 = (int16_t) padded16_global_wrapper_stencil.extract<368, 383>();
  int16_t _padded16_global_wrapper_stencil_50 = (int16_t) padded16_global_wrapper_stencil.extract<384, 399>();

  int16_t _618 = (int16_t)(2);
  int16_t _619 = _padded16_global_wrapper_stencil_28 * _618;
  int16_t _620 = _padded16_global_wrapper_stencil_27 + _619;
  int16_t _621 = _padded16_global_wrapper_stencil_26 + _620;
  int16_t _622 = _621 - _padded16_global_wrapper_stencil_29;
  int16_t _623 = _padded16_global_wrapper_stencil_30 * _618;
  int16_t _624 = _622 - _623;
  int16_t _625 = _624 - _padded16_global_wrapper_stencil_31;
  int16_t _626 = (int16_t)(180);
  int16_t _627 = min(_625, _626);
  int16_t _628 = (int16_t)(-180);
  int16_t _629 = max(_627, _628);
  int16_t _630 = _padded16_global_wrapper_stencil_32 * _618;
  int16_t _631 = _padded16_global_wrapper_stencil_27 + _630;
  int16_t _632 = _padded16_global_wrapper_stencil_31 + _631;
  int16_t _633 = _632 - _padded16_global_wrapper_stencil_29;
  int16_t _634 = _padded16_global_wrapper_stencil_33 * _618;
  int16_t _635 = _633 - _634;
  int16_t _636 = _635 - _padded16_global_wrapper_stencil_26;
  int16_t _637 = min(_636, _626);
  int16_t _638 = max(_637, _628);
  int16_t _639 = _629 * _638;
  int16_t _640 = (int16_t)(6);
  int16_t _641 = _639 >> _640;
  int16_t _642 = _padded16_global_wrapper_stencil_34 * _618;
  int16_t _643 = _padded16_global_wrapper_stencil_32 + _642;
  int16_t _644 = _padded16_global_wrapper_stencil_33 + _643;
  int16_t _645 = _644 - _padded16_global_wrapper_stencil_35;
  int16_t _646 = _padded16_global_wrapper_stencil_36 * _618;
  int16_t _647 = _645 - _646;
  int16_t _648 = _647 - _padded16_global_wrapper_stencil_37;
  int16_t _649 = min(_648, _626);
  int16_t _650 = max(_649, _628);
  int16_t _651 = _padded16_global_wrapper_stencil_31 * _618;
  int16_t _652 = _padded16_global_wrapper_stencil_32 + _651;
  int16_t _653 = _padded16_global_wrapper_stencil_37 + _652;
  int16_t _654 = _653 - _padded16_global_wrapper_stencil_35;
  int16_t _655 = _padded16_global_wrapper_stencil_29 * _618;
  int16_t _656 = _654 - _655;
  int16_t _657 = _656 - _padded16_global_wrapper_stencil_33;
  int16_t _658 = min(_657, _626);
  int16_t _659 = max(_658, _628);
  int16_t _660 = _650 * _659;
  int16_t _661 = _660 >> _640;
  int16_t _662 = _padded16_global_wrapper_stencil_40 * _618;
  int16_t _663 = _padded16_global_wrapper_stencil_39 + _662;
  int16_t _664 = _padded16_global_wrapper_stencil_38 + _663;
  int16_t _665 = _664 - _padded16_global_wrapper_stencil_33;
  int16_t _666 = _665 - _642;
  int16_t _667 = _666 - _padded16_global_wrapper_stencil_32;
  int16_t _668 = min(_667, _626);
  int16_t _669 = max(_668, _628);
  int16_t _670 = _padded16_global_wrapper_stencil_27 * _618;
  int16_t _671 = _padded16_global_wrapper_stencil_39 + _670;
  int16_t _672 = _padded16_global_wrapper_stencil_32 + _671;
  int16_t _673 = _672 - _padded16_global_wrapper_stencil_33;
  int16_t _674 = _padded16_global_wrapper_stencil_26 * _618;
  int16_t _675 = _673 - _674;
  int16_t _676 = _675 - _padded16_global_wrapper_stencil_38;
  int16_t _677 = min(_676, _626);
  int16_t _678 = max(_677, _628);
  int16_t _679 = _669 * _678;
  int16_t _680 = _679 >> _640;
  int16_t _681 = _padded16_global_wrapper_stencil_41 + _630;
  int16_t _682 = _padded16_global_wrapper_stencil_34 + _681;
  int16_t _683 = _682 - _padded16_global_wrapper_stencil_36;
  int16_t _684 = _padded16_global_wrapper_stencil_37 * _618;
  int16_t _685 = _683 - _684;
  int16_t _686 = _685 - _padded16_global_wrapper_stencil_42;
  int16_t _687 = min(_686, _626);
  int16_t _688 = max(_687, _628);
  int16_t _689 = _padded16_global_wrapper_stencil_43 * _618;
  int16_t _690 = _padded16_global_wrapper_stencil_41 + _689;
  int16_t _691 = _padded16_global_wrapper_stencil_42 + _690;
  int16_t _692 = _691 - _padded16_global_wrapper_stencil_36;
  int16_t _693 = _692 - _623;
  int16_t _694 = _693 - _padded16_global_wrapper_stencil_34;
  int16_t _695 = min(_694, _626);
  int16_t _696 = max(_695, _628);
  int16_t _697 = _688 * _696;
  int16_t _698 = _697 >> _640;
  int16_t _699 = _padded16_global_wrapper_stencil_44 + _670;
  int16_t _700 = _padded16_global_wrapper_stencil_28 + _699;
  int16_t _701 = _700 - _padded16_global_wrapper_stencil_30;
  int16_t _702 = _701 - _651;
  int16_t _703 = _702 - _padded16_global_wrapper_stencil_43;
  int16_t _704 = min(_703, _626);
  int16_t _705 = max(_704, _628);
  int16_t _706 = _padded16_global_wrapper_stencil_41 * _618;
  int16_t _707 = _padded16_global_wrapper_stencil_44 + _706;
  int16_t _708 = _padded16_global_wrapper_stencil_43 + _707;
  int16_t _709 = _708 - _padded16_global_wrapper_stencil_30;
  int16_t _710 = _709 - _642;
  int16_t _711 = _710 - _padded16_global_wrapper_stencil_28;
  int16_t _712 = min(_711, _626);
  int16_t _713 = max(_712, _628);
  int16_t _714 = _705 * _713;
  int16_t _715 = _714 >> _640;
  int16_t _716 = _padded16_global_wrapper_stencil_39 * _618;
  int16_t _717 = _padded16_global_wrapper_stencil_45 + _716;
  int16_t _718 = _padded16_global_wrapper_stencil_40 + _717;
  int16_t _719 = _718 - _padded16_global_wrapper_stencil_34;
  int16_t _720 = _719 - _630;
  int16_t _721 = _720 - _padded16_global_wrapper_stencil_41;
  int16_t _722 = min(_721, _626);
  int16_t _723 = max(_722, _628);
  int16_t _724 = _padded16_global_wrapper_stencil_44 * _618;
  int16_t _725 = _padded16_global_wrapper_stencil_45 + _724;
  int16_t _726 = _padded16_global_wrapper_stencil_41 + _725;
  int16_t _727 = _726 - _padded16_global_wrapper_stencil_34;
  int16_t _728 = _727 - _619;
  int16_t _729 = _728 - _padded16_global_wrapper_stencil_40;
  int16_t _730 = min(_729, _626);
  int16_t _731 = max(_730, _628);
  int16_t _732 = _723 * _731;
  int16_t _733 = _732 >> _640;
  int16_t _734 = _padded16_global_wrapper_stencil_46 + _706;
  int16_t _735 = _padded16_global_wrapper_stencil_32 + _734;
  int16_t _736 = _735 - _padded16_global_wrapper_stencil_37;
  int16_t _737 = _padded16_global_wrapper_stencil_42 * _618;
  int16_t _738 = _736 - _737;
  int16_t _739 = _738 - _padded16_global_wrapper_stencil_47;
  int16_t _740 = min(_739, _626);
  int16_t _741 = max(_740, _628);
  int16_t _742 = _padded16_global_wrapper_stencil_48 * _618;
  int16_t _743 = _padded16_global_wrapper_stencil_46 + _742;
  int16_t _744 = _padded16_global_wrapper_stencil_47 + _743;
  int16_t _745 = _744 - _padded16_global_wrapper_stencil_37;
  int16_t _746 = _745 - _651;
  int16_t _747 = _746 - _padded16_global_wrapper_stencil_32;
  int16_t _748 = min(_747, _626);
  int16_t _749 = max(_748, _628);
  int16_t _750 = _741 * _749;
  int16_t _751 = _750 >> _640;
  int16_t _752 = _padded16_global_wrapper_stencil_45 * _618;
  int16_t _753 = _padded16_global_wrapper_stencil_49 + _752;
  int16_t _754 = _padded16_global_wrapper_stencil_39 + _753;
  int16_t _755 = _754 - _padded16_global_wrapper_stencil_32;
  int16_t _756 = _755 - _706;
  int16_t _757 = _756 - _padded16_global_wrapper_stencil_46;
  int16_t _758 = min(_757, _626);
  int16_t _759 = max(_758, _628);
  int16_t _760 = _padded16_global_wrapper_stencil_50 * _618;
  int16_t _761 = _padded16_global_wrapper_stencil_49 + _760;
  int16_t _762 = _padded16_global_wrapper_stencil_46 + _761;
  int16_t _763 = _762 - _padded16_global_wrapper_stencil_32;
  int16_t _764 = _763 - _670;
  int16_t _765 = _764 - _padded16_global_wrapper_stencil_39;
  int16_t _766 = min(_765, _626);
  int16_t _767 = max(_766, _628);
  int16_t _768 = _759 * _767;
  int16_t _769 = _768 >> _640;
  int16_t _770 = _padded16_global_wrapper_stencil_50 + _724;
  int16_t _771 = _padded16_global_wrapper_stencil_27 + _770;
  int16_t _772 = _771 - _padded16_global_wrapper_stencil_31;
  int16_t _773 = _772 - _689;
  int16_t _774 = _773 - _padded16_global_wrapper_stencil_48;
  int16_t _775 = min(_774, _626);
  int16_t _776 = max(_775, _628);
  int16_t _777 = _padded16_global_wrapper_stencil_46 * _618;
  int16_t _778 = _padded16_global_wrapper_stencil_50 + _777;
  int16_t _779 = _padded16_global_wrapper_stencil_48 + _778;
  int16_t _780 = _779 - _padded16_global_wrapper_stencil_31;
  int16_t _781 = _780 - _630;
  int16_t _782 = _781 - _padded16_global_wrapper_stencil_27;
  int16_t _783 = min(_782, _626);
  int16_t _784 = max(_783, _628);
  int16_t _785 = _776 * _784;
  int16_t _786 = _785 >> _640;
  int16_t _787 = _769 + _786;
  int16_t _788 = _751 + _787;
  int16_t _789 = _733 + _788;
  int16_t _790 = _715 + _789;
  int16_t _791 = _698 + _790;
  int16_t _792 = _680 + _791;
  int16_t _793 = _661 + _792;
  int16_t _794 = _641 + _793;
  return _794;
}

//store is: lgyy.stencil(lgyy_s0_x, lgyy_s0_y) = (((max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y) + (padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -2))) - (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y) + (padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -2))) - (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -2))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -2), lgyy_s0_y) + (padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -2), lgyy_s0_y) + (padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -2))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + 2), lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + -2))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + 2), lgyy_s0_y) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y)*(int16)2))) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -2))) - (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -2))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + -2))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -1))) - (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + -1))) - (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + -1))), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + 1)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 1))*(int16)2))) - padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + -1))) - (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + -1))*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + -1))), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -2), lgyy_s0_y)) - (padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -2), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -2), lgyy_s0_y)) - (padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)), (int16)180), (int16)-180))/(int16)64) + (((max(min(((((padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)) - (padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 2), lgyy_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 2), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)) - (padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 2), lgyy_s0_y)), (int16)180), (int16)-180))/(int16)64) + ((max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y)) - (padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y)), (int16)180), (int16)-180)*max(min(((((padded16_global_wrapper.stencil((lgyy_s0_x + -1), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil((lgyy_s0_x + 1), (lgyy_s0_y + 2)) + (padded16_global_wrapper.stencil(lgyy_s0_x, (lgyy_s0_y + 2))*(int16)2))) - padded16_global_wrapper.stencil((lgyy_s0_x + -1), lgyy_s0_y)) - (padded16_global_wrapper.stencil(lgyy_s0_x, lgyy_s0_y)*(int16)2)) - padded16_global_wrapper.stencil((lgyy_s0_x + 1), lgyy_s0_y)), (int16)180), (int16)-180))/(int16)64)))))))))
hw_uint<16> hcompute_lgyy_stencil(hw_uint<400>& padded16_global_wrapper_stencil) {
  int16_t _padded16_global_wrapper_stencil_51 = (int16_t) padded16_global_wrapper_stencil.extract<0, 15>();
  int16_t _padded16_global_wrapper_stencil_52 = (int16_t) padded16_global_wrapper_stencil.extract<16, 31>();
  int16_t _padded16_global_wrapper_stencil_53 = (int16_t) padded16_global_wrapper_stencil.extract<32, 47>();
  int16_t _padded16_global_wrapper_stencil_54 = (int16_t) padded16_global_wrapper_stencil.extract<48, 63>();
  int16_t _padded16_global_wrapper_stencil_55 = (int16_t) padded16_global_wrapper_stencil.extract<64, 79>();
  int16_t _padded16_global_wrapper_stencil_56 = (int16_t) padded16_global_wrapper_stencil.extract<80, 95>();
  int16_t _padded16_global_wrapper_stencil_57 = (int16_t) padded16_global_wrapper_stencil.extract<96, 111>();
  int16_t _padded16_global_wrapper_stencil_58 = (int16_t) padded16_global_wrapper_stencil.extract<112, 127>();
  int16_t _padded16_global_wrapper_stencil_59 = (int16_t) padded16_global_wrapper_stencil.extract<128, 143>();
  int16_t _padded16_global_wrapper_stencil_60 = (int16_t) padded16_global_wrapper_stencil.extract<144, 159>();
  int16_t _padded16_global_wrapper_stencil_61 = (int16_t) padded16_global_wrapper_stencil.extract<160, 175>();
  int16_t _padded16_global_wrapper_stencil_62 = (int16_t) padded16_global_wrapper_stencil.extract<176, 191>();
  int16_t _padded16_global_wrapper_stencil_63 = (int16_t) padded16_global_wrapper_stencil.extract<192, 207>();
  int16_t _padded16_global_wrapper_stencil_64 = (int16_t) padded16_global_wrapper_stencil.extract<208, 223>();
  int16_t _padded16_global_wrapper_stencil_65 = (int16_t) padded16_global_wrapper_stencil.extract<224, 239>();
  int16_t _padded16_global_wrapper_stencil_66 = (int16_t) padded16_global_wrapper_stencil.extract<240, 255>();
  int16_t _padded16_global_wrapper_stencil_67 = (int16_t) padded16_global_wrapper_stencil.extract<256, 271>();
  int16_t _padded16_global_wrapper_stencil_68 = (int16_t) padded16_global_wrapper_stencil.extract<272, 287>();
  int16_t _padded16_global_wrapper_stencil_69 = (int16_t) padded16_global_wrapper_stencil.extract<288, 303>();
  int16_t _padded16_global_wrapper_stencil_70 = (int16_t) padded16_global_wrapper_stencil.extract<304, 319>();
  int16_t _padded16_global_wrapper_stencil_71 = (int16_t) padded16_global_wrapper_stencil.extract<320, 335>();
  int16_t _padded16_global_wrapper_stencil_72 = (int16_t) padded16_global_wrapper_stencil.extract<336, 351>();
  int16_t _padded16_global_wrapper_stencil_73 = (int16_t) padded16_global_wrapper_stencil.extract<352, 367>();
  int16_t _padded16_global_wrapper_stencil_74 = (int16_t) padded16_global_wrapper_stencil.extract<368, 383>();
  int16_t _padded16_global_wrapper_stencil_75 = (int16_t) padded16_global_wrapper_stencil.extract<384, 399>();

  int16_t _1182 = (int16_t)(2);
  int16_t _1183 = _padded16_global_wrapper_stencil_53 * _1182;
  int16_t _1184 = _padded16_global_wrapper_stencil_52 + _1183;
  int16_t _1185 = _padded16_global_wrapper_stencil_51 + _1184;
  int16_t _1186 = _1185 - _padded16_global_wrapper_stencil_54;
  int16_t _1187 = _padded16_global_wrapper_stencil_55 * _1182;
  int16_t _1188 = _1186 - _1187;
  int16_t _1189 = _1188 - _padded16_global_wrapper_stencil_56;
  int16_t _1190 = (int16_t)(180);
  int16_t _1191 = min(_1189, _1190);
  int16_t _1192 = (int16_t)(-180);
  int16_t _1193 = max(_1191, _1192);
  int16_t _1194 = _1193 * _1193;
  int16_t _1195 = (int16_t)(6);
  int16_t _1196 = _1194 >> _1195;
  int16_t _1197 = _padded16_global_wrapper_stencil_51 * _1182;
  int16_t _1198 = _padded16_global_wrapper_stencil_53 + _1197;
  int16_t _1199 = _padded16_global_wrapper_stencil_57 + _1198;
  int16_t _1200 = _1199 - _padded16_global_wrapper_stencil_58;
  int16_t _1201 = _padded16_global_wrapper_stencil_54 * _1182;
  int16_t _1202 = _1200 - _1201;
  int16_t _1203 = _1202 - _padded16_global_wrapper_stencil_55;
  int16_t _1204 = min(_1203, _1190);
  int16_t _1205 = max(_1204, _1192);
  int16_t _1206 = _1205 * _1205;
  int16_t _1207 = _1206 >> _1195;
  int16_t _1208 = _padded16_global_wrapper_stencil_52 * _1182;
  int16_t _1209 = _padded16_global_wrapper_stencil_59 + _1208;
  int16_t _1210 = _padded16_global_wrapper_stencil_53 + _1209;
  int16_t _1211 = _1210 - _padded16_global_wrapper_stencil_55;
  int16_t _1212 = _padded16_global_wrapper_stencil_56 * _1182;
  int16_t _1213 = _1211 - _1212;
  int16_t _1214 = _1213 - _padded16_global_wrapper_stencil_60;
  int16_t _1215 = min(_1214, _1190);
  int16_t _1216 = max(_1215, _1192);
  int16_t _1217 = _1216 * _1216;
  int16_t _1218 = _1217 >> _1195;
  int16_t _1219 = _padded16_global_wrapper_stencil_63 * _1182;
  int16_t _1220 = _padded16_global_wrapper_stencil_62 + _1219;
  int16_t _1221 = _padded16_global_wrapper_stencil_61 + _1220;
  int16_t _1222 = _1221 - _padded16_global_wrapper_stencil_64;
  int16_t _1223 = _padded16_global_wrapper_stencil_65 * _1182;
  int16_t _1224 = _1222 - _1223;
  int16_t _1225 = _1224 - _padded16_global_wrapper_stencil_66;
  int16_t _1226 = min(_1225, _1190);
  int16_t _1227 = max(_1226, _1192);
  int16_t _1228 = _1227 * _1227;
  int16_t _1229 = _1228 >> _1195;
  int16_t _1230 = _padded16_global_wrapper_stencil_62 * _1182;
  int16_t _1231 = _padded16_global_wrapper_stencil_67 + _1230;
  int16_t _1232 = _padded16_global_wrapper_stencil_63 + _1231;
  int16_t _1233 = _1232 - _padded16_global_wrapper_stencil_65;
  int16_t _1234 = _padded16_global_wrapper_stencil_66 * _1182;
  int16_t _1235 = _1233 - _1234;
  int16_t _1236 = _1235 - _padded16_global_wrapper_stencil_68;
  int16_t _1237 = min(_1236, _1190);
  int16_t _1238 = max(_1237, _1192);
  int16_t _1239 = _1238 * _1238;
  int16_t _1240 = _1239 >> _1195;
  int16_t _1241 = _padded16_global_wrapper_stencil_67 * _1182;
  int16_t _1242 = _padded16_global_wrapper_stencil_69 + _1241;
  int16_t _1243 = _padded16_global_wrapper_stencil_62 + _1242;
  int16_t _1244 = _1243 - _padded16_global_wrapper_stencil_66;
  int16_t _1245 = _padded16_global_wrapper_stencil_68 * _1182;
  int16_t _1246 = _1244 - _1245;
  int16_t _1247 = _1246 - _padded16_global_wrapper_stencil_70;
  int16_t _1248 = min(_1247, _1190);
  int16_t _1249 = max(_1248, _1192);
  int16_t _1250 = _1249 * _1249;
  int16_t _1251 = _1250 >> _1195;
  int16_t _1252 = _padded16_global_wrapper_stencil_73 * _1182;
  int16_t _1253 = _padded16_global_wrapper_stencil_72 + _1252;
  int16_t _1254 = _padded16_global_wrapper_stencil_71 + _1253;
  int16_t _1255 = _1254 - _padded16_global_wrapper_stencil_57;
  int16_t _1256 = _1255 - _1197;
  int16_t _1257 = _1256 - _padded16_global_wrapper_stencil_53;
  int16_t _1258 = min(_1257, _1190);
  int16_t _1259 = max(_1258, _1192);
  int16_t _1260 = _1259 * _1259;
  int16_t _1261 = _1260 >> _1195;
  int16_t _1262 = _padded16_global_wrapper_stencil_75 * _1182;
  int16_t _1263 = _padded16_global_wrapper_stencil_74 + _1262;
  int16_t _1264 = _padded16_global_wrapper_stencil_72 + _1263;
  int16_t _1265 = _1264 - _padded16_global_wrapper_stencil_53;
  int16_t _1266 = _1265 - _1208;
  int16_t _1267 = _1266 - _padded16_global_wrapper_stencil_59;
  int16_t _1268 = min(_1267, _1190);
  int16_t _1269 = max(_1268, _1192);
  int16_t _1270 = _1269 * _1269;
  int16_t _1271 = _1270 >> _1195;
  int16_t _1272 = _padded16_global_wrapper_stencil_72 * _1182;
  int16_t _1273 = _padded16_global_wrapper_stencil_75 + _1272;
  int16_t _1274 = _padded16_global_wrapper_stencil_73 + _1273;
  int16_t _1275 = _1274 - _padded16_global_wrapper_stencil_51;
  int16_t _1276 = _1275 - _1183;
  int16_t _1277 = _1276 - _padded16_global_wrapper_stencil_52;
  int16_t _1278 = min(_1277, _1190);
  int16_t _1279 = max(_1278, _1192);
  int16_t _1280 = _1279 * _1279;
  int16_t _1281 = _1280 >> _1195;
  int16_t _1282 = _1271 + _1281;
  int16_t _1283 = _1261 + _1282;
  int16_t _1284 = _1251 + _1283;
  int16_t _1285 = _1240 + _1284;
  int16_t _1286 = _1229 + _1285;
  int16_t _1287 = _1218 + _1286;
  int16_t _1288 = _1207 + _1287;
  int16_t _1289 = _1196 + _1288;
  return _1289;
}

//store is: hw_output.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi) = int16(select((((((((((((((lgxx.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64)*(lgyy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64)) - ((lgxy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64)*(lgxy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64))) - ((((lgxx.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64))*((lgxx.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + -1))/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16))) && (((((lgxx.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + -1))/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))) && (((((lgxx.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64)*(lgyy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64)) - ((lgxy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64)*(lgxy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64))) - ((((lgxx.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64))*((lgxx.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + -1))/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))) && (((((lgxx.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + -1), hw_output_s0_y_yi)/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))) && (((((lgxx.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + 1), hw_output_s0_y_yi)/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))) && (((((lgxx.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64)*(lgyy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64)) - ((lgxy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64)*(lgxy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64))) - ((((lgxx.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64))*((lgxx.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + -1), (hw_output_s0_y_yi + 1))/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))) && (((((lgxx.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, (hw_output_s0_y_yi + 1))/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))) && (((((lgxx.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64)*(lgyy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64)) - ((lgxy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64)*(lgxy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64))) - ((((lgxx.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64))*((lgxx.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64) + (lgyy.stencil((hw_output_s0_x_xi + 1), (hw_output_s0_y_yi + 1))/(int16)64)))/(int16)16)) < ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))) && ((int16)1 <= ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)) - ((lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)*(lgxy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))) - ((((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64))*((lgxx.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64) + (lgyy.stencil(hw_output_s0_x_xi, hw_output_s0_y_yi)/(int16)64)))/(int16)16)))), 255, 0))
hw_uint<16> hcompute_hw_output_stencil(hw_uint<144>& lgxx_stencil, hw_uint<144>& lgxy_stencil, hw_uint<144>& lgyy_stencil) {
  int16_t _lgxx_stencil_1 = (int16_t) lgxx_stencil.extract<0, 15>();
  int16_t _lgxx_stencil_2 = (int16_t) lgxx_stencil.extract<16, 31>();
  int16_t _lgxx_stencil_3 = (int16_t) lgxx_stencil.extract<32, 47>();
  int16_t _lgxx_stencil_4 = (int16_t) lgxx_stencil.extract<48, 63>();
  int16_t _lgxx_stencil_5 = (int16_t) lgxx_stencil.extract<64, 79>();
  int16_t _lgxx_stencil_6 = (int16_t) lgxx_stencil.extract<80, 95>();
  int16_t _lgxx_stencil_7 = (int16_t) lgxx_stencil.extract<96, 111>();
  int16_t _lgxx_stencil_8 = (int16_t) lgxx_stencil.extract<112, 127>();
  int16_t _lgxx_stencil_9 = (int16_t) lgxx_stencil.extract<128, 143>();

  int16_t _lgxy_stencil_1 = (int16_t) lgxy_stencil.extract<0, 15>();
  int16_t _lgxy_stencil_2 = (int16_t) lgxy_stencil.extract<16, 31>();
  int16_t _lgxy_stencil_3 = (int16_t) lgxy_stencil.extract<32, 47>();
  int16_t _lgxy_stencil_4 = (int16_t) lgxy_stencil.extract<48, 63>();
  int16_t _lgxy_stencil_5 = (int16_t) lgxy_stencil.extract<64, 79>();
  int16_t _lgxy_stencil_6 = (int16_t) lgxy_stencil.extract<80, 95>();
  int16_t _lgxy_stencil_7 = (int16_t) lgxy_stencil.extract<96, 111>();
  int16_t _lgxy_stencil_8 = (int16_t) lgxy_stencil.extract<112, 127>();
  int16_t _lgxy_stencil_9 = (int16_t) lgxy_stencil.extract<128, 143>();

  int16_t _lgyy_stencil_1 = (int16_t) lgyy_stencil.extract<0, 15>();
  int16_t _lgyy_stencil_2 = (int16_t) lgyy_stencil.extract<16, 31>();
  int16_t _lgyy_stencil_3 = (int16_t) lgyy_stencil.extract<32, 47>();
  int16_t _lgyy_stencil_4 = (int16_t) lgyy_stencil.extract<48, 63>();
  int16_t _lgyy_stencil_5 = (int16_t) lgyy_stencil.extract<64, 79>();
  int16_t _lgyy_stencil_6 = (int16_t) lgyy_stencil.extract<80, 95>();
  int16_t _lgyy_stencil_7 = (int16_t) lgyy_stencil.extract<96, 111>();
  int16_t _lgyy_stencil_8 = (int16_t) lgyy_stencil.extract<112, 127>();
  int16_t _lgyy_stencil_9 = (int16_t) lgyy_stencil.extract<128, 143>();

  int16_t _1539 = (int16_t)(6);
  int16_t _1540 = _lgxx_stencil_1 >> _1539;
  int16_t _1541 = _lgyy_stencil_1 >> _1539;
  int16_t _1542 = _1540 * _1541;
  int16_t _1543 = _lgxy_stencil_1 >> _1539;
  int16_t _1544 = _1543 * _1543;
  int16_t _1545 = _1542 - _1544;
  int16_t _1546 = _1540 + _1541;
  int16_t _1547 = _1546 * _1546;
  int16_t _1548 = (int16_t)(4);
  int16_t _1549 = _1547 >> _1548;
  int16_t _1550 = _1545 - _1549;
  int16_t _1551 = _lgxx_stencil_2 >> _1539;
  int16_t _1552 = _lgyy_stencil_2 >> _1539;
  int16_t _1553 = _1551 * _1552;
  int16_t _1554 = _lgxy_stencil_2 >> _1539;
  int16_t _1555 = _1554 * _1554;
  int16_t _1556 = _1553 - _1555;
  int16_t _1557 = _1551 + _1552;
  int16_t _1558 = _1557 * _1557;
  int16_t _1559 = _1558 >> _1548;
  int16_t _1560 = _1556 - _1559;
  bool _1561 = _1550 < _1560;
  int16_t _1562 = _lgxx_stencil_3 >> _1539;
  int16_t _1563 = _lgyy_stencil_3 >> _1539;
  int16_t _1564 = _1562 * _1563;
  int16_t _1565 = _lgxy_stencil_3 >> _1539;
  int16_t _1566 = _1565 * _1565;
  int16_t _1567 = _1564 - _1566;
  int16_t _1568 = _1562 + _1563;
  int16_t _1569 = _1568 * _1568;
  int16_t _1570 = _1569 >> _1548;
  int16_t _1571 = _1567 - _1570;
  bool _1572 = _1571 < _1560;
  bool _1573 = _1561 && _1572;
  int16_t _1574 = _lgxx_stencil_4 >> _1539;
  int16_t _1575 = _lgyy_stencil_4 >> _1539;
  int16_t _1576 = _1574 * _1575;
  int16_t _1577 = _lgxy_stencil_4 >> _1539;
  int16_t _1578 = _1577 * _1577;
  int16_t _1579 = _1576 - _1578;
  int16_t _1580 = _1574 + _1575;
  int16_t _1581 = _1580 * _1580;
  int16_t _1582 = _1581 >> _1548;
  int16_t _1583 = _1579 - _1582;
  bool _1584 = _1583 < _1560;
  bool _1585 = _1573 && _1584;
  int16_t _1586 = _lgxx_stencil_5 >> _1539;
  int16_t _1587 = _lgyy_stencil_5 >> _1539;
  int16_t _1588 = _1586 * _1587;
  int16_t _1589 = _lgxy_stencil_5 >> _1539;
  int16_t _1590 = _1589 * _1589;
  int16_t _1591 = _1588 - _1590;
  int16_t _1592 = _1586 + _1587;
  int16_t _1593 = _1592 * _1592;
  int16_t _1594 = _1593 >> _1548;
  int16_t _1595 = _1591 - _1594;
  bool _1596 = _1595 < _1560;
  bool _1597 = _1585 && _1596;
  int16_t _1598 = _lgxx_stencil_6 >> _1539;
  int16_t _1599 = _lgyy_stencil_6 >> _1539;
  int16_t _1600 = _1598 * _1599;
  int16_t _1601 = _lgxy_stencil_6 >> _1539;
  int16_t _1602 = _1601 * _1601;
  int16_t _1603 = _1600 - _1602;
  int16_t _1604 = _1598 + _1599;
  int16_t _1605 = _1604 * _1604;
  int16_t _1606 = _1605 >> _1548;
  int16_t _1607 = _1603 - _1606;
  bool _1608 = _1607 < _1560;
  bool _1609 = _1597 && _1608;
  int16_t _1610 = _lgxx_stencil_7 >> _1539;
  int16_t _1611 = _lgyy_stencil_7 >> _1539;
  int16_t _1612 = _1610 * _1611;
  int16_t _1613 = _lgxy_stencil_7 >> _1539;
  int16_t _1614 = _1613 * _1613;
  int16_t _1615 = _1612 - _1614;
  int16_t _1616 = _1610 + _1611;
  int16_t _1617 = _1616 * _1616;
  int16_t _1618 = _1617 >> _1548;
  int16_t _1619 = _1615 - _1618;
  bool _1620 = _1619 < _1560;
  bool _1621 = _1609 && _1620;
  int16_t _1622 = _lgxx_stencil_8 >> _1539;
  int16_t _1623 = _lgyy_stencil_8 >> _1539;
  int16_t _1624 = _1622 * _1623;
  int16_t _1625 = _lgxy_stencil_8 >> _1539;
  int16_t _1626 = _1625 * _1625;
  int16_t _1627 = _1624 - _1626;
  int16_t _1628 = _1622 + _1623;
  int16_t _1629 = _1628 * _1628;
  int16_t _1630 = _1629 >> _1548;
  int16_t _1631 = _1627 - _1630;
  bool _1632 = _1631 < _1560;
  bool _1633 = _1621 && _1632;
  int16_t _1634 = _lgxx_stencil_9 >> _1539;
  int16_t _1635 = _lgyy_stencil_9 >> _1539;
  int16_t _1636 = _1634 * _1635;
  int16_t _1637 = _lgxy_stencil_9 >> _1539;
  int16_t _1638 = _1637 * _1637;
  int16_t _1639 = _1636 - _1638;
  int16_t _1640 = _1634 + _1635;
  int16_t _1641 = _1640 * _1640;
  int16_t _1642 = _1641 >> _1548;
  int16_t _1643 = _1639 - _1642;
  bool _1644 = _1643 < _1560;
  bool _1645 = _1633 && _1644;
  int16_t _1646 = (int16_t)(1);
  bool _1647 = _1646 <= _1560;
  bool _1648 = _1645 && _1647;
  int32_t _1649 = (int32_t)(_1648 ? 255 : 0);
  int16_t _1650 = (int16_t)(_1649);
  return _1650;
}

