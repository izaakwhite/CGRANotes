{"top":"global.mapping_function_2",
"namespaces":{
  "commonlib":{
    "generators":{
      "MAD":{
        "typegen":"coreir.ternary",
        "genparams":{"width":"Int"}
      },
      "abs":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
            "type":["Record",[
              ["in",["Array",16,"BitIn"]],
              ["out",["Array",16,"Bit"]]
            ]],
            "instances":{
              "is_pos":{
                "genref":"coreir.sge",
                "genargs":{"width":["Int",16]}
              },
              "mult":{
                "genref":"coreir.mul",
                "genargs":{"width":["Int",16]}
              },
              "negone_const":{
                "genref":"coreir.const",
                "genargs":{"width":["Int",16]},
                "modargs":{"value":[["BitVector",16],"16'hffff"]}
              },
              "out_mux":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",16]}
              },
              "zero_const":{
                "genref":"coreir.const",
                "genargs":{"width":["Int",16]},
                "modargs":{"value":[["BitVector",16],"16'h0000"]}
              }
            },
            "connections":[
              ["self.in","is_pos.in0"],
              ["zero_const.out","is_pos.in1"],
              ["out_mux.sel","is_pos.out"],
              ["negone_const.out","mult.in0"],
              ["self.in","mult.in1"],
              ["out_mux.in0","mult.out"],
              ["self.in","out_mux.in1"],
              ["self.out","out_mux.out"]
            ]
          }]
        ]
      },
      "absd":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "accumulation_register":{
        "typegen":"commonlib.accumulation_register_type",
        "genparams":{"iterations":"Int", "width":"Int"}
      },
      "bitopn":{
        "typegen":"commonlib.bitopN_type",
        "genparams":{"N":"Int", "operator":"String"}
      },
      "const_array":{
        "typegen":"coreir.constArrayTG",
        "genparams":{"type":"CoreIRType", "value":"Int"},
        "defaultgenargs":{"value":["Int",0]}
      },
      "counter":{
        "typegen":"commonlib.counter_type",
        "genparams":{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"}
      },
      "deserializer":{
        "typegen":"commonlib.deserializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "div":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "lutN":{
        "typegen":"commonlib.lutNType",
        "genparams":{"N":"Int"},
        "metadata":{"verilog":{"definition":"  assign out = init[in];","interface":["input [N-1:0] in","output out"],"parameters":["init"]}}
      },
      "muxn":{
        "typegen":"commonlib.muxN_type",
        "genparams":{"N":"Int", "width":"Int"},
        "modules":[
          [{"N":["Int",2], "width":["Int",16]},{
            "type":["Record",[
              ["in",["Record",[["data",["Array",2,["Array",16,"BitIn"]]],["sel",["Array",1,"BitIn"]]]]],
              ["out",["Array",16,"Bit"]]
            ]],
            "instances":{
              "_join":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",16]}
              }
            },
            "connections":[
              ["self.in.data.0","_join.in0"],
              ["self.in.data.1","_join.in1"],
              ["self.out","_join.out"],
              ["self.in.sel.0","_join.sel"]
            ]
          }],
          [{"N":["Int",2], "width":["Int",32]},{
            "type":["Record",[
              ["in",["Record",[["data",["Array",2,["Array",32,"BitIn"]]],["sel",["Array",1,"BitIn"]]]]],
              ["out",["Array",32,"Bit"]]
            ]],
            "instances":{
              "_join":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",32]}
              }
            },
            "connections":[
              ["self.in.data.0","_join.in0"],
              ["self.in.data.1","_join.in1"],
              ["self.out","_join.out"],
              ["self.in.sel.0","_join.sel"]
            ]
          }]
        ]
      },
      "opn":{
        "typegen":"commonlib.opN_type",
        "genparams":{"N":"Int", "operator":"String", "width":"Int"}
      },
      "reg_array":{
        "typegen":"coreir.regArrayTG",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "init":"Int", "type":"CoreIRType"},
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false], "init":["Int",0]}
      },
      "reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "sclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "serializer":{
        "typegen":"commonlib.serializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "smax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
            "type":["Record",[
              ["in0",["Array",16,"BitIn"]],
              ["in1",["Array",16,"BitIn"]],
              ["out",["Array",16,"Bit"]]
            ]],
            "instances":{
              "max_mux":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",16]}
              },
              "scomp":{
                "genref":"coreir.sge",
                "genargs":{"width":["Int",16]}
              }
            },
            "connections":[
              ["self.in1","max_mux.in0"],
              ["self.in0","max_mux.in1"],
              ["self.out","max_mux.out"],
              ["scomp.out","max_mux.sel"],
              ["self.in0","scomp.in0"],
              ["self.in1","scomp.in1"]
            ]
          }]
        ]
      },
      "smin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
            "type":["Record",[
              ["in0",["Array",16,"BitIn"]],
              ["in1",["Array",16,"BitIn"]],
              ["out",["Array",16,"Bit"]]
            ]],
            "instances":{
              "min_mux":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",16]}
              },
              "scomp":{
                "genref":"coreir.sle",
                "genargs":{"width":["Int",16]}
              }
            },
            "connections":[
              ["self.in1","min_mux.in0"],
              ["self.in0","min_mux.in1"],
              ["self.out","min_mux.out"],
              ["scomp.out","min_mux.sel"],
              ["self.in0","scomp.in0"],
              ["self.in1","scomp.in1"]
            ]
          }]
        ]
      },
      "transpose":{
        "typegen":"commonlib.transpose_type",
        "genparams":{"input_type":"CoreIRType"}
      },
      "transpose_reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "uclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "umax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
            "type":["Record",[
              ["in0",["Array",16,"BitIn"]],
              ["in1",["Array",16,"BitIn"]],
              ["out",["Array",16,"Bit"]]
            ]],
            "instances":{
              "max_mux":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",16]}
              },
              "ucomp":{
                "genref":"coreir.uge",
                "genargs":{"width":["Int",16]}
              }
            },
            "connections":[
              ["self.in1","max_mux.in0"],
              ["self.in0","max_mux.in1"],
              ["self.out","max_mux.out"],
              ["ucomp.out","max_mux.sel"],
              ["ucomp.in0","self.in0"],
              ["ucomp.in1","self.in1"]
            ]
          }]
        ]
      },
      "umin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
            "type":["Record",[
              ["in0",["Array",16,"BitIn"]],
              ["in1",["Array",16,"BitIn"]],
              ["out",["Array",16,"Bit"]]
            ]],
            "instances":{
              "min_mux":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",16]}
              },
              "ucomp":{
                "genref":"coreir.ule",
                "genargs":{"width":["Int",16]}
              }
            },
            "connections":[
              ["self.in1","min_mux.in0"],
              ["self.in0","min_mux.in1"],
              ["self.out","min_mux.out"],
              ["ucomp.out","min_mux.sel"],
              ["ucomp.in0","self.in0"],
              ["ucomp.in1","self.in1"]
            ]
          }]
        ]
      }
    },
    "typegens":{
      "accumulation_register_type":[{"iterations":"Int", "width":"Int"},"implicit"],
      "bitopN_type":[{"N":"Int", "operator":"String"},"implicit"],
      "counter_type":[{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"},"implicit"],
      "deserializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "lutNType":[{"N":"Int"},"implicit"],
      "muxN_type":[{"N":"Int", "width":"Int"},"sparse",[
        [{"N":["Int",2], "width":["Int",16]},["Record",[["in",["Record",[["data",["Array",2,["Array",16,"BitIn"]]],["sel",["Array",1,"BitIn"]]]]],["out",["Array",16,"Bit"]]]]],
        [{"N":["Int",2], "width":["Int",32]},["Record",[["in",["Record",[["data",["Array",2,["Array",32,"BitIn"]]],["sel",["Array",1,"BitIn"]]]]],["out",["Array",32,"Bit"]]]]]
      ]],
      "opN_type":[{"N":"Int", "operator":"String", "width":"Int"},"implicit"],
      "reshape_type":[{"input_type":"CoreIRType", "output_type":"CoreIRType"},"implicit"],
      "serializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "transpose_type":[{"input_type":"CoreIRType"},"implicit"]
    }
  },
  "global":{
    "modules":{
      "MUL":{
        "type":["Record",[
          ["instr",["Array",1,"BitIn"]],
          ["signed_",["Array",1,"BitIn"]],
          ["a",["Array",16,"BitIn"]],
          ["b",["Array",16,"BitIn"]],
          ["CLK",["Named","coreir.clkIn"]],
          ["ASYNCRESET",["Named","coreir.arstIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "MUL_comb_inst0":{
            "modref":"global.MUL_comb"
          }
        },
        "connections":[
          ["self.O","MUL_comb_inst0.O"],
          ["self.a","MUL_comb_inst0.a"],
          ["self.b","MUL_comb_inst0.b"],
          ["self.instr","MUL_comb_inst0.instr"],
          ["self.signed_","MUL_comb_inst0.signed_"]
        ]
      },
      "MUL_comb":{
        "type":["Record",[
          ["instr",["Array",1,"BitIn"]],
          ["signed_",["Array",1,"BitIn"]],
          ["a",["Array",16,"BitIn"]],
          ["b",["Array",16,"BitIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "Mux2xOutUInt16_inst0":{
            "modref":"global.Mux2xOutUInt16"
          },
          "Mux2xOutUInt32_inst0":{
            "modref":"global.Mux2xOutUInt32"
          },
          "Mux2xOutUInt32_inst1":{
            "modref":"global.Mux2xOutUInt32"
          },
          "bit_const_0_None":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "const_0_1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "const_1_1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "magma_Bits_1_eq_inst0":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "magma_Bits_1_eq_inst1":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "magma_Bits_1_eq_inst2":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "magma_Bits_32_mul_inst0":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",32]}
          }
        },
        "connections":[
          ["magma_Bits_32_mul_inst0.out.16:32","Mux2xOutUInt16_inst0.I0.0:16"],
          ["magma_Bits_32_mul_inst0.out.0:16","Mux2xOutUInt16_inst0.I1.0:16"],
          ["self.O","Mux2xOutUInt16_inst0.O"],
          ["magma_Bits_1_eq_inst2.out","Mux2xOutUInt16_inst0.S"],
          ["self.a.0:16","Mux2xOutUInt32_inst0.I0.0:16"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.16"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.17"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.18"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.19"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.20"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.21"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.22"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.23"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.24"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.25"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.26"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.27"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.28"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.29"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.30"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst0.I0.31"],
          ["self.a.0:16","Mux2xOutUInt32_inst0.I1.0:16"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.16"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.17"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.18"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.19"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.20"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.21"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.22"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.23"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.24"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.25"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.26"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.27"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.28"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.29"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.30"],
          ["self.a.15","Mux2xOutUInt32_inst0.I1.31"],
          ["magma_Bits_32_mul_inst0.in0","Mux2xOutUInt32_inst0.O"],
          ["magma_Bits_1_eq_inst0.out","Mux2xOutUInt32_inst0.S"],
          ["self.b.0:16","Mux2xOutUInt32_inst1.I0.0:16"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.16"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.17"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.18"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.19"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.20"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.21"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.22"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.23"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.24"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.25"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.26"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.27"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.28"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.29"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.30"],
          ["bit_const_0_None.out","Mux2xOutUInt32_inst1.I0.31"],
          ["self.b.0:16","Mux2xOutUInt32_inst1.I1.0:16"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.16"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.17"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.18"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.19"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.20"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.21"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.22"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.23"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.24"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.25"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.26"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.27"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.28"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.29"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.30"],
          ["self.b.15","Mux2xOutUInt32_inst1.I1.31"],
          ["magma_Bits_32_mul_inst0.in1","Mux2xOutUInt32_inst1.O"],
          ["magma_Bits_1_eq_inst1.out","Mux2xOutUInt32_inst1.S"],
          ["magma_Bits_1_eq_inst2.in1","const_0_1.out"],
          ["magma_Bits_1_eq_inst0.in1","const_1_1.out"],
          ["magma_Bits_1_eq_inst1.in1","const_1_1.out"],
          ["self.signed_","magma_Bits_1_eq_inst0.in0"],
          ["self.signed_","magma_Bits_1_eq_inst1.in0"],
          ["self.instr","magma_Bits_1_eq_inst2.in0"]
        ]
      },
      "Mux2xOutUInt16":{
        "type":["Record",[
          ["I0",["Array",16,"BitIn"]],
          ["I1",["Array",16,"BitIn"]],
          ["S","BitIn"],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "coreir_commonlib_mux2x16_inst0":{
            "genref":"commonlib.muxn",
            "genargs":{"N":["Int",2], "width":["Int",16]}
          }
        },
        "connections":[
          ["self.I0","coreir_commonlib_mux2x16_inst0.in.data.0"],
          ["self.I1","coreir_commonlib_mux2x16_inst0.in.data.1"],
          ["self.S","coreir_commonlib_mux2x16_inst0.in.sel.0"],
          ["self.O","coreir_commonlib_mux2x16_inst0.out"]
        ]
      },
      "Mux2xOutUInt32":{
        "type":["Record",[
          ["I0",["Array",32,"BitIn"]],
          ["I1",["Array",32,"BitIn"]],
          ["S","BitIn"],
          ["O",["Array",32,"Bit"]]
        ]],
        "instances":{
          "coreir_commonlib_mux2x32_inst0":{
            "genref":"commonlib.muxn",
            "genargs":{"N":["Int",2], "width":["Int",32]}
          }
        },
        "connections":[
          ["self.I0","coreir_commonlib_mux2x32_inst0.in.data.0"],
          ["self.I1","coreir_commonlib_mux2x32_inst0.in.data.1"],
          ["self.S","coreir_commonlib_mux2x32_inst0.in.sel.0"],
          ["self.O","coreir_commonlib_mux2x32_inst0.out"]
        ]
      },
      "PE":{
        "type":["Record",[
          ["inst",["Array",20,"BitIn"]],
          ["inputs",["Array",32,"BitIn"]],
          ["clk_en","BitIn"],
          ["CLK",["Named","coreir.clkIn"]],
          ["ASYNCRESET",["Named","coreir.arstIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "MUL_inst0":{
            "modref":"global.MUL"
          },
          "PE_comb_inst0":{
            "modref":"global.PE_comb"
          }
        },
        "connections":[
          ["self.ASYNCRESET","MUL_inst0.ASYNCRESET"],
          ["self.CLK","MUL_inst0.CLK"],
          ["PE_comb_inst0.self_modules_0_O","MUL_inst0.O"],
          ["PE_comb_inst0.O2","MUL_inst0.a"],
          ["PE_comb_inst0.O3","MUL_inst0.b"],
          ["PE_comb_inst0.O0","MUL_inst0.instr"],
          ["PE_comb_inst0.O1","MUL_inst0.signed_"],
          ["self.O","PE_comb_inst0.O4"],
          ["self.clk_en","PE_comb_inst0.clk_en"],
          ["self.inputs","PE_comb_inst0.inputs"],
          ["self.inst","PE_comb_inst0.inst"]
        ]
      },
      "PE_comb":{
        "type":["Record",[
          ["inst",["Array",20,"BitIn"]],
          ["inputs",["Array",32,"BitIn"]],
          ["clk_en","BitIn"],
          ["self_modules_0_O",["Array",16,"BitIn"]],
          ["O0",["Array",1,"Bit"]],
          ["O1",["Array",1,"Bit"]],
          ["O2",["Array",16,"Bit"]],
          ["O3",["Array",16,"Bit"]],
          ["O4",["Array",16,"Bit"]]
        ]],
        "instances":{
          "Mux2xOutUInt16_inst0":{
            "modref":"global.Mux2xOutUInt16"
          },
          "Mux2xOutUInt16_inst1":{
            "modref":"global.Mux2xOutUInt16"
          },
          "Mux2xOutUInt16_inst2":{
            "modref":"global.Mux2xOutUInt16"
          },
          "Mux2xOutUInt16_inst3":{
            "modref":"global.Mux2xOutUInt16"
          },
          "const_0_1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "const_1_1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "magma_Bits_1_eq_inst0":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "magma_Bits_1_eq_inst1":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "magma_Bits_1_eq_inst2":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "magma_Bits_1_eq_inst3":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          }
        },
        "connections":[
          ["self.inst.1:17","Mux2xOutUInt16_inst0.I0.0:16"],
          ["self.inst.1:17","Mux2xOutUInt16_inst0.I1.0:16"],
          ["Mux2xOutUInt16_inst1.I0","Mux2xOutUInt16_inst0.O"],
          ["magma_Bits_1_eq_inst0.out","Mux2xOutUInt16_inst0.S"],
          ["self.inputs.16:32","Mux2xOutUInt16_inst1.I1.0:16"],
          ["self.O3","Mux2xOutUInt16_inst1.O"],
          ["magma_Bits_1_eq_inst1.out","Mux2xOutUInt16_inst1.S"],
          ["self.inst.1:17","Mux2xOutUInt16_inst2.I0.0:16"],
          ["self.inst.1:17","Mux2xOutUInt16_inst2.I1.0:16"],
          ["Mux2xOutUInt16_inst3.I0","Mux2xOutUInt16_inst2.O"],
          ["magma_Bits_1_eq_inst2.out","Mux2xOutUInt16_inst2.S"],
          ["self.self_modules_0_O","Mux2xOutUInt16_inst3.I1"],
          ["self.O4","Mux2xOutUInt16_inst3.O"],
          ["magma_Bits_1_eq_inst3.out","Mux2xOutUInt16_inst3.S"],
          ["magma_Bits_1_eq_inst0.in1","const_0_1.out"],
          ["magma_Bits_1_eq_inst2.in1","const_0_1.out"],
          ["magma_Bits_1_eq_inst1.in1","const_1_1.out"],
          ["magma_Bits_1_eq_inst3.in1","const_1_1.out"],
          ["self.inst.17","magma_Bits_1_eq_inst0.in0.0"],
          ["self.inst.17","magma_Bits_1_eq_inst1.in0.0"],
          ["self.inst.18","magma_Bits_1_eq_inst2.in0.0"],
          ["self.inst.18","magma_Bits_1_eq_inst3.in0.0"],
          ["self.inst.0","self.O0.0"],
          ["self.inst.19","self.O1.0"],
          ["self.inputs.0:16","self.O2.0:16"]
        ]
      },
      "PE_wrapped":{
        "type":["Record",[
          ["inst",["Array",20,"BitIn"]],
          ["inputs0",["Array",16,"BitIn"]],
          ["inputs1",["Array",16,"BitIn"]],
          ["clk_en","BitIn"],
          ["CLK",["Named","coreir.clkIn"]],
          ["ASYNCRESET",["Named","coreir.arstIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "PE_inst0":{
            "modref":"global.PE"
          },
          "PE_wrapped_comb_inst0":{
            "modref":"global.PE_wrapped_comb"
          }
        },
        "connections":[
          ["self.ASYNCRESET","PE_inst0.ASYNCRESET"],
          ["self.CLK","PE_inst0.CLK"],
          ["PE_wrapped_comb_inst0.self_PE_O","PE_inst0.O"],
          ["PE_wrapped_comb_inst0.O2","PE_inst0.clk_en"],
          ["PE_wrapped_comb_inst0.O1","PE_inst0.inputs"],
          ["PE_wrapped_comb_inst0.O0","PE_inst0.inst"],
          ["self.O","PE_wrapped_comb_inst0.O3"],
          ["self.clk_en","PE_wrapped_comb_inst0.clk_en"],
          ["self.inputs0","PE_wrapped_comb_inst0.inputs0"],
          ["self.inputs1","PE_wrapped_comb_inst0.inputs1"],
          ["self.inst","PE_wrapped_comb_inst0.inst"]
        ]
      },
      "PE_wrapped_comb":{
        "type":["Record",[
          ["inst",["Array",20,"BitIn"]],
          ["inputs0",["Array",16,"BitIn"]],
          ["inputs1",["Array",16,"BitIn"]],
          ["clk_en","BitIn"],
          ["self_PE_O",["Array",16,"BitIn"]],
          ["O0",["Array",20,"Bit"]],
          ["O1",["Array",32,"Bit"]],
          ["O2","Bit"],
          ["O3",["Array",16,"Bit"]]
        ]],
        "connections":[
          ["self.inst","self.O0"],
          ["self.inputs0.0:16","self.O1.0:16"],
          ["self.inputs1.0:16","self.O1.16:32"],
          ["self.clk_en","self.O2"],
          ["self.self_PE_O","self.O3"]
        ]
      },
      "WrappedPE_wrapped":{
        "type":["Record",[
          ["inst",["Array",20,"BitIn"]],
          ["inputs0",["Array",16,"BitIn"]],
          ["inputs1",["Array",16,"BitIn"]],
          ["clk_en","BitIn"],
          ["CLK",["Named","coreir.clkIn"]],
          ["ASYNCRESET",["Named","coreir.arstIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "PE_wrapped_inst0":{
            "modref":"global.PE_wrapped"
          }
        },
        "connections":[
          ["self.ASYNCRESET","PE_wrapped_inst0.ASYNCRESET"],
          ["self.CLK","PE_wrapped_inst0.CLK"],
          ["self.O","PE_wrapped_inst0.O"],
          ["self.clk_en","PE_wrapped_inst0.clk_en"],
          ["self.inputs0","PE_wrapped_inst0.inputs0"],
          ["self.inputs1","PE_wrapped_inst0.inputs1"],
          ["self.inst","PE_wrapped_inst0.inst"]
        ]
      },
      "hcompute_hw_input_global_wrapper_stencil":{
        "type":["Record",[
          ["out_hw_input_global_wrapper_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_input_global_wrapper_stencil","self.in0_hw_input_stencil.0"]
        ]
      },
      "hcompute_hw_input_global_wrapper_stencil_mapped":{
        "type":["Record",[
          ["out_hw_input_global_wrapper_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_input_global_wrapper_stencil","self.in0_hw_input_stencil.0"]
        ]
      },
      "hcompute_hw_output_stencil":{
        "type":["Record",[
          ["out_hw_output_stencil",["Array",16,"Bit"]],
          ["in0_mult_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_output_stencil","self.in0_mult_stencil.0"]
        ]
      },
      "hcompute_hw_output_stencil_mapped":{
        "type":["Record",[
          ["out_hw_output_stencil",["Array",16,"Bit"]],
          ["in0_mult_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_output_stencil","self.in0_mult_stencil.0"]
        ]
      },
      "hcompute_mult_stencil":{
        "type":["Record",[
          ["out_mult_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_global_wrapper_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "const_p2__259":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "mul_hw_input_global_wrapper_stencil_1_259_260":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["mul_hw_input_global_wrapper_stencil_1_259_260.in1","const_p2__259.out"],
          ["self.in0_hw_input_global_wrapper_stencil.0","mul_hw_input_global_wrapper_stencil_1_259_260.in0"],
          ["self.out_mult_stencil","mul_hw_input_global_wrapper_stencil_1_259_260.out"]
        ]
      },
      "hcompute_mult_stencil_mapped":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["arst",["Named","coreir.arstIn"]],
          ["in0_hw_input_global_wrapper_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["out_mult_stencil",["Array",16,"Bit"]]
        ]],
        "instances":{
          "c139937675413840":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",20]},
            "modargs":{"value":[["BitVector",20],"20'h40004"]}
          },
          "c139937675535888":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "c139937675536400":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          },
          "i139937675093520_i139937675601168":{
            "modref":"global.WrappedPE_wrapped"
          }
        },
        "connections":[
          ["i139937675093520_i139937675601168.inst","c139937675413840.out"],
          ["i139937675093520_i139937675601168.clk_en","c139937675535888.out"],
          ["i139937675093520_i139937675601168.inputs1","c139937675536400.out"],
          ["self.arst","i139937675093520_i139937675601168.ASYNCRESET"],
          ["self.clk","i139937675093520_i139937675601168.CLK"],
          ["self.out_mult_stencil","i139937675093520_i139937675601168.O"],
          ["self.in0_hw_input_global_wrapper_stencil.0","i139937675093520_i139937675601168.inputs0"]
        ]
      },
      "mapping_function_0":{
        "type":["Record",[
          ["const0",["Array",16,"BitIn"]],
          ["in0",["Array",16,"BitIn"]],
          ["CLK",["Named","coreir.clkIn"]],
          ["ASYNCRESET",["Named","coreir.arstIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "mapping_function_0_comb_inst0$magma_Bits_16_mul_inst0":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in0","mapping_function_0_comb_inst0$magma_Bits_16_mul_inst0.in0"],
          ["self.const0","mapping_function_0_comb_inst0$magma_Bits_16_mul_inst0.in1"],
          ["self.O","mapping_function_0_comb_inst0$magma_Bits_16_mul_inst0.out"]
        ]
      },
      "mapping_function_0_comb":{
        "type":["Record",[
          ["const0",["Array",16,"BitIn"]],
          ["in0",["Array",16,"BitIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "magma_Bits_16_mul_inst0":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in0","magma_Bits_16_mul_inst0.in0"],
          ["self.const0","magma_Bits_16_mul_inst0.in1"],
          ["self.O","magma_Bits_16_mul_inst0.out"]
        ]
      },
      "mapping_function_1":{
        "type":["Record",[
          ["in0",["Array",16,"BitIn"]],
          ["in1",["Array",16,"BitIn"]],
          ["CLK",["Named","coreir.clkIn"]],
          ["ASYNCRESET",["Named","coreir.arstIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "mapping_function_1_comb_inst0$magma_Bits_16_mul_inst0":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in0","mapping_function_1_comb_inst0$magma_Bits_16_mul_inst0.in0"],
          ["self.in1","mapping_function_1_comb_inst0$magma_Bits_16_mul_inst0.in1"],
          ["self.O","mapping_function_1_comb_inst0$magma_Bits_16_mul_inst0.out"]
        ]
      },
      "mapping_function_1_comb":{
        "type":["Record",[
          ["in0",["Array",16,"BitIn"]],
          ["in1",["Array",16,"BitIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "instances":{
          "magma_Bits_16_mul_inst0":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in0","magma_Bits_16_mul_inst0.in0"],
          ["self.in1","magma_Bits_16_mul_inst0.in1"],
          ["self.O","magma_Bits_16_mul_inst0.out"]
        ]
      },
      "mapping_function_2":{
        "type":["Record",[
          ["const0",["Array",16,"BitIn"]],
          ["CLK",["Named","coreir.clkIn"]],
          ["ASYNCRESET",["Named","coreir.arstIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "connections":[
          ["self.const0","self.O"]
        ]
      },
      "mapping_function_2_comb":{
        "type":["Record",[
          ["const0",["Array",16,"BitIn"]],
          ["O",["Array",16,"Bit"]]
        ]],
        "connections":[
          ["self.const0","self.O"]
        ]
      }
    }
  },
  "mantle":{
    "generators":{
      "add":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "counter":{
        "typegen":"mantle.counter_type",
        "genparams":{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},
        "defaultgenargs":{"has_en":["Bool",false], "has_max":["Bool",false], "has_srst":["Bool",false]}
      },
      "reg":{
        "typegen":"mantle.regType",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},
        "modules":[
          [{"has_clr":["Bool",false], "has_en":["Bool",true], "has_rst":["Bool",false], "width":["Int",16]},{
            "type":["Record",[
              ["in",["Array",16,"BitIn"]],
              ["clk",["Named","coreir.clkIn"]],
              ["out",["Array",16,"Bit"]],
              ["en","BitIn"]
            ]],
            "modparams":{"init":["BitVector",16]},
            "defaultmodargs":{"init":[["BitVector",16],"16'h0000"]},
            "instances":{
              "enMux":{
                "genref":"coreir.mux",
                "genargs":{"width":["Int",16]}
              },
              "reg0":{
                "genref":"coreir.reg",
                "genargs":{"width":["Int",16]},
                "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"Arg","init"]}
              }
            },
            "connections":[
              ["reg0.out","enMux.in0"],
              ["self.in","enMux.in1"],
              ["reg0.in","enMux.out"],
              ["self.en","enMux.sel"],
              ["self.clk","reg0.clk"],
              ["self.out","reg0.out"]
            ]
          }]
        ],
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false]}
      },
      "regCE":{
        "typegen":"mantle.regCEType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk) begin\n    if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk"]}}
      },
      "regCE_arst":{
        "typegen":"mantle.regCEArstType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk, posedge arst) begin\n    if (arst) begin\n      value <= init;\n    end\n    else if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk","input arst"],"parameters":["init"]}}
      },
      "sub":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "wire":{
        "typegen":"mantle.wire",
        "genparams":{"type":"CoreIRType"}
      }
    },
    "typegens":{
      "addType":[{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},"implicit"],
      "counter_type":[{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},"implicit"],
      "regCEArstType":[{"width":"Int"},"implicit"],
      "regCEType":[{"width":"Int"},"implicit"],
      "regType":[{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},"sparse",[
        [{"has_clr":["Bool",false], "has_en":["Bool",true], "has_rst":["Bool",false], "width":["Int",16]},["Record",[["in",["Array",16,"BitIn"]],["clk",["Named","coreir.clkIn"]],["out",["Array",16,"Bit"]],["en","BitIn"]]]]
      ]],
      "wire":[{"type":"CoreIRType"},"implicit"]
    }
  },
  "memory":{
    "generators":{
      "fifo":{
        "typegen":"memory.FifoMemType",
        "genparams":{"depth":"Int", "width":"Int"},
        "defaultgenargs":{"depth":["Int",1024], "width":["Int",16]}
      },
      "ram":{
        "typegen":"memory.RamType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "ram2":{
        "typegen":"memory.RamType2",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rom":{
        "typegen":"memory.RomType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rom2":{
        "typegen":"memory.Rom2Type",
        "genparams":{"depth":"Int", "width":"Int"},
        "modules":[
          [{"depth":["Int",256], "width":["Int",16]},{
            "type":["Record",[
              ["clk",["Named","coreir.clkIn"]],
              ["rdata",["Array",16,"Bit"]],
              ["raddr",["Array",16,"BitIn"]],
              ["ren","BitIn"]
            ]],
            "modparams":{"init":"Json"},
            "instances":{
              "mem":{
                "genref":"coreir.mem",
                "genargs":{"depth":["Int",256], "has_init":["Bool",true], "sync_read":["Bool",false], "width":["Int",16]},
                "modargs":{"init":["Json","Arg","init"]}
              },
              "raddr_slice":{
                "genref":"coreir.slice",
                "genargs":{"hi":["Int",8], "lo":["Int",0], "width":["Int",16]}
              },
              "readreg":{
                "genref":"mantle.reg",
                "genargs":{"has_clr":["Bool",false], "has_en":["Bool",true], "has_rst":["Bool",false], "width":["Int",16]},
                "modargs":{"init":[["BitVector",16],"16'h0000"]}
              },
              "waddr0":{
                "genref":"coreir.const",
                "genargs":{"width":["Int",8]},
                "modargs":{"value":[["BitVector",8],"8'h00"]}
              },
              "wdata0":{
                "genref":"coreir.const",
                "genargs":{"width":["Int",16]},
                "modargs":{"value":[["BitVector",16],"16'h0000"]}
              }
            },
            "connections":[
              ["self.clk","mem.clk"],
              ["raddr_slice.out","mem.raddr"],
              ["readreg.in","mem.rdata"],
              ["waddr0.out","mem.waddr"],
              ["wdata0.out","mem.wdata"],
              ["wdata0.out.0","mem.wen"],
              ["self.raddr","raddr_slice.in"],
              ["self.clk","readreg.clk"],
              ["self.ren","readreg.en"],
              ["self.rdata","readreg.out"]
            ]
          }]
        ]
      },
      "rowbuffer":{
        "typegen":"memory.rowbufferType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rowbuffer_stencil_valid":{
        "typegen":"memory.rowbufferWithStencilValidType",
        "genparams":{"depth":"Int", "stencil_width":"Int", "width":"Int"}
      }
    },
    "typegens":{
      "FifoMemType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType2":[{"depth":"Int", "width":"Int"},"implicit"],
      "Rom2Type":[{"depth":"Int", "width":"Int"},"sparse",[
        [{"depth":["Int",256], "width":["Int",16]},["Record",[["clk",["Named","coreir.clkIn"]],["rdata",["Array",16,"Bit"]],["raddr",["Array",16,"BitIn"]],["ren","BitIn"]]]]
      ]],
      "RomType":[{"depth":"Int", "width":"Int"},"implicit"],
      "rowbufferType":[{"depth":"Int", "width":"Int"},"implicit"],
      "rowbufferWithStencilValidType":[{"depth":"Int", "stencil_width":"Int", "width":"Int"},"implicit"]
    }
  }
}
}
